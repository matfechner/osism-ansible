<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2020-10-19T12:39:39Z</date>
    <groups>
        <group>
            <name>Ceph Cluster</name>
        </group>
        <group>
            <name>compute</name>
        </group>
        <group>
            <name>control</name>
        </group>
        <group>
            <name>Load Balancers</name>
        </group>
        <group>
            <name>network</name>
        </group>
        <group>
            <name>storage</name>
        </group>
        <group>
            <name>Templates</name>
        </group>
        <group>
            <name>Templates/Applications</name>
        </group>
        <group>
            <name>Templates/Databases</name>
        </group>
        <group>
            <name>Templates/Modules</name>
        </group>
        <group>
            <name>Templates/Operating systems</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>SCS_Template App Elasticsearch Cluster by HTTP</template>
            <name>SCS_Template App Elasticsearch Cluster by HTTP</name>
            <description>The template to monitor Elasticsearch by Zabbix that work without any external scripts.&#13;
It works with both standalone and cluster instances.&#13;
The metrics are collected in one pass remotely using an HTTP agent. &#13;
They are getting values from REST API _cluster/health, _cluster/stats, _nodes/stats requests.&#13;
You can set {$ELASTICSEARCH.USERNAME} and {$ELASTICSEARCH.PASSWORD} macros in the template for using on the host level.&#13;
If you use an atypical location ES API, don't forget to change the macros {$ELASTICSEARCH.SCHEME},{$ELASTICSEARCH.PORT}.&#13;
&#13;
&#13;
You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/399473-discussion-thread-for-official-zabbix-template-for-elasticsearch&#13;
&#13;
Template tooling version used: 0.35</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>ES cluster</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>ES: Delayed unassigned shards</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.delayed_unassigned_shards</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of shards whose allocation has been delayed by the timeout settings.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.delayed_unassigned_shards</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Get cluster health</name>
                    <type>HTTP_AGENT</type>
                    <key>es.cluster.get_health</key>
                    <history>0h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <authtype>BASIC</authtype>
                    <username>{$ELASTICSEARCH.USERNAME}</username>
                    <password>{$ELASTICSEARCH.PASSWORD}</password>
                    <description>Returns the health status of a cluster.</description>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <timeout>15s</timeout>
                    <url>{$ELASTICSEARCH.SCHEME}://{HOST.CONN}:{$ELASTICSEARCH.PORT}/_cluster/health?timeout=5s</url>
                    <status_codes/>
                </item>
                <item>
                    <name>ES: Get cluster stats</name>
                    <type>HTTP_AGENT</type>
                    <key>es.cluster.get_stats</key>
                    <history>0h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <authtype>BASIC</authtype>
                    <username>{$ELASTICSEARCH.USERNAME}</username>
                    <password>{$ELASTICSEARCH.PASSWORD}</password>
                    <description>Returns cluster statistics.</description>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <timeout>15s</timeout>
                    <url>{$ELASTICSEARCH.SCHEME}://{HOST.CONN}:{$ELASTICSEARCH.PORT}/_cluster/stats</url>
                </item>
                <item>
                    <name>ES: Inactive shards percentage</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.inactive_shards_percent_as_number</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The ratio of inactive shards in the cluster expressed as a percentage.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.active_shards_percent_as_number</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>return (100 - value)</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Number of initializing shards</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.initializing_shards</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of shards that are under initialization.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.initializing_shards</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(10m)}&gt;0</expression>
                            <name>ES: Cluster has the initializing shards</name>
                            <priority>AVERAGE</priority>
                            <description>The cluster has the initializing shards longer than 10 minutes.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ES: Number of data nodes</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.number_of_data_nodes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of nodes that are dedicated to data nodes.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.number_of_data_nodes</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Number of nodes</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.number_of_nodes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of nodes within the cluster.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.number_of_nodes</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{change()}&lt;0</expression>
                            <name>ES: The number of nodes within the cluster has decreased</name>
                            <priority>INFO</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{change()}&gt;0</expression>
                            <name>ES: The number of nodes within the cluster has increased</name>
                            <priority>INFO</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ES: Number of pending tasks</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.number_of_pending_tasks</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of cluster-level changes that have not yet been executed.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.number_of_pending_tasks</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Number of relocating shards</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.relocating_shards</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of shards that are under relocation.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.relocating_shards</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Cluster health status</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.status</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Health status of the cluster, based on the state of its primary and replica shards. Statuses are:&#13;
green&#13;
All shards are assigned.&#13;
yellow&#13;
All primary shards are assigned, but one or more replica shards are unassigned. If a node in the cluster fails, some data could be unavailable until that node is repaired.&#13;
red&#13;
One or more primary shards are unassigned, so some data is unavailable. This can occur briefly during cluster startup as primary shards are assigned.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>ES cluster state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.status</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var state = ['green', 'yellow', 'red'];

return state.indexOf(value.trim()) === -1 ? 255 : state.indexOf(value.trim());
</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}=2</expression>
                            <name>ES: Health is RED</name>
                            <priority>HIGH</priority>
                            <description>One or more primary shards are unassigned, so some data is unavailable. &#13;
This can occur briefly during cluster startup as primary shards are assigned.</description>
                        </trigger>
                        <trigger>
                            <expression>{last()}=255</expression>
                            <name>ES: Health is UNKNOWN</name>
                            <priority>HIGH</priority>
                            <description>The health status of the cluster is unknown or cannot be obtained.</description>
                        </trigger>
                        <trigger>
                            <expression>{last()}=1</expression>
                            <name>ES: Health is YELLOW</name>
                            <priority>AVERAGE</priority>
                            <description>All primary shards are assigned, but one or more replica shards are unassigned. &#13;
If a node in the cluster fails, some data could be unavailable until that node is repaired.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ES: Task max waiting in queue</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.task_max_waiting_in_queue</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>The time expressed in seconds since the earliest initiated task is waiting for being performed.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.task_max_waiting_in_queue_millis</params>
                        </step>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Number of unassigned shards</name>
                    <type>DEPENDENT</type>
                    <key>es.cluster.unassigned_shards</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of shards that are not allocated.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.unassigned_shards</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_health</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(10m)}&gt;0</expression>
                            <name>ES: Cluster has the unassigned shards</name>
                            <priority>AVERAGE</priority>
                            <description>The cluster has the unassigned shards longer than 10 minutes.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ES: Indices with shards assigned to nodes</name>
                    <type>DEPENDENT</type>
                    <key>es.indices.count</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The total number of indices with shards assigned to the selected nodes.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.indices.count</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_stats</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Number of non-deleted documents</name>
                    <type>DEPENDENT</type>
                    <key>es.indices.docs.count</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The total number of non-deleted documents across all primary shards assigned to the selected nodes.&#13;
This number is based on the documents in Lucene segments and may include the documents from nested fields.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.indices.docs.count</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_stats</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Nodes with the data role</name>
                    <type>DEPENDENT</type>
                    <key>es.nodes.count.data</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of selected nodes with the data role.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.nodes.count.data</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_stats</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Nodes with the ingest role</name>
                    <type>DEPENDENT</type>
                    <key>es.nodes.count.ingest</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of selected nodes with the ingest role.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.nodes.count.ingest</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_stats</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Nodes with the master role</name>
                    <type>DEPENDENT</type>
                    <key>es.nodes.count.master</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of selected nodes with the master role.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.nodes.count.master</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_stats</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}=2</expression>
                            <name>ES: Cluster has only two master nodes</name>
                            <priority>DISASTER</priority>
                            <description>The cluster has only two nodes with a master role and will be unavailable if one of them breaks.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ES: Total available size to JVM in all file stores</name>
                    <type>DEPENDENT</type>
                    <key>es.nodes.fs.available_in_bytes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <description>The total number of bytes available to JVM in the file stores across all selected nodes.&#13;
Depending on OS or process-level restrictions, this number may be less than nodes.fs.free_in_byes. &#13;
This is the actual amount of free disk space the selected Elasticsearch nodes can use.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.nodes.fs.available_in_bytes</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_stats</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Total size of all file stores</name>
                    <type>DEPENDENT</type>
                    <key>es.nodes.fs.total_in_bytes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <description>The total size in bytes of all file stores across all selected nodes.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.nodes.fs.total_in_bytes</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_stats</key>
                    </master_item>
                </item>
                <item>
                    <name>ES: Get nodes stats</name>
                    <type>HTTP_AGENT</type>
                    <key>es.nodes.get_stats</key>
                    <history>0h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <authtype>BASIC</authtype>
                    <username>{$ELASTICSEARCH.USERNAME}</username>
                    <password>{$ELASTICSEARCH.PASSWORD}</password>
                    <description>Returns cluster nodes statistics.</description>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <timeout>30s</timeout>
                    <url>{$ELASTICSEARCH.SCHEME}://{HOST.CONN}:{$ELASTICSEARCH.PORT}/_nodes/stats</url>
                </item>
                <item>
                    <name>ES: Cluster uptime</name>
                    <type>DEPENDENT</type>
                    <key>es.nodes.jvm.max_uptime[{#ES.NODE}]</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Uptime duration in seconds since JVM has last started.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.nodes.jvm.max_uptime_in_millis</params>
                        </step>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>es.cluster.get_stats</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}&lt;10m</expression>
                            <name>ES: Cluster has been restarted (uptime &lt; 10m)</name>
                            <priority>INFO</priority>
                            <description>Uptime is less than 10 minutes</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ES: Service response time</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service.perf[&quot;{$ELASTICSEARCH.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$ELASTICSEARCH.PORT}&quot;]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Checks performance of the TCP service.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$ELASTICSEARCH.RESPONSE_TIME.MAX.WARN}</expression>
                            <name>ES: Service response time is too high (over {$ELASTICSEARCH.RESPONSE_TIME.MAX.WARN} for 5m)</name>
                            <priority>WARNING</priority>
                            <description>The performance of the TCP service is very low.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>ES: Service is down</name>
                                    <expression>{SCS_Template App Elasticsearch Cluster by HTTP:net.tcp.service[&quot;{$ELASTICSEARCH.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$ELASTICSEARCH.PORT}&quot;].last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ES: Service status</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[&quot;{$ELASTICSEARCH.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$ELASTICSEARCH.PORT}&quot;]</key>
                    <history>7d</history>
                    <description>Checks if the service is running and accepting TCP connections.</description>
                    <applications>
                        <application>
                            <name>ES cluster</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>ES: Service is down</name>
                            <priority>AVERAGE</priority>
                            <description>The service is unavailable or does not accept TCP connections.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Cluster nodes discovery</name>
                    <type>HTTP_AGENT</type>
                    <key>es.nodes.discovery</key>
                    <delay>1h</delay>
                    <authtype>BASIC</authtype>
                    <username>{$ELASTICSEARCH.USERNAME}</username>
                    <password>{$ELASTICSEARCH.PASSWORD}</password>
                    <description>Discovery ES cluster nodes.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total available size</name>
                            <type>DEPENDENT</type>
                            <key>es.node.fs.total.available_in_bytes[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>The total number of bytes available to this Java virtual machine on all file stores. &#13;
Depending on OS or process level restrictions, this might appear less than fs.total.free_in_bytes. &#13;
This is the actual amount of free disk space the Elasticsearch node can utilize.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].fs.total.available_in_bytes.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total size</name>
                            <type>DEPENDENT</type>
                            <key>es.node.fs.total.total_in_bytes[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>Total size (in bytes) of all file stores.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].fs.total.total_in_bytes.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Number of open HTTP connections</name>
                            <type>DEPENDENT</type>
                            <key>es.node.http.current_open[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of currently open HTTP connections for the node.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].http.current_open.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Rate of HTTP connections opened</name>
                            <type>DEPENDENT</type>
                            <key>es.node.http.opened.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of HTTP connections opened for the node per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].http.total_opened.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Flush latency</name>
                            <type>CALCULATED</type>
                            <key>es.node.indices.flush.latency[{#ES.NODE}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>ms</units>
                            <params>last(es.node.indices.flush.total_time_in_millis[{#ES.NODE}]) / ( last(es.node.indices.flush.total[{#ES.NODE}]) + (last(es.node.indices.flush.total[{#ES.NODE}]) = 0) )</params>
                            <description>The average flush latency calculated from the available flush.total and flush.total_time_in_millis metrics.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$ELASTICSEARCH.FLUSH_LATENCY.MAX.WARN}</expression>
                                    <name>ES {#ES.NODE}: Flush latency is too high (over {$ELASTICSEARCH.FLUSH_LATENCY.MAX.WARN}ms for 5m)</name>
                                    <priority>WARNING</priority>
                                    <description>If you see this metric increasing steadily, it may indicate a problem with slow disks; this problem may escalate &#13;
and eventually prevent you from being able to add new information to your index.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total number of index flushes to disk</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.flush.total[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The total number of flush operations.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.flush.total.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total time spent on flushing indices to disk</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.flush.total_time_in_millis[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>ms</units>
                            <description>Total time in milliseconds spent performing flush operations.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.flush.total_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Current indexing operations</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.indexing.index_current[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of indexing operations currently running.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.indexing.index_current.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Indexing latency</name>
                            <type>CALCULATED</type>
                            <key>es.node.indices.indexing.index_latency[{#ES.NODE}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>ms</units>
                            <params>last(es.node.indices.indexing.index_time_in_millis[{#ES.NODE}]) / ( last(es.node.indices.indexing.index_total[{#ES.NODE}]) + (last(es.node.indices.indexing.index_total[{#ES.NODE}]) = 0) )</params>
                            <description>The average indexing latency calculated from the available index_total and index_time_in_millis metrics.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$ELASTICSEARCH.INDEXING_LATENCY.MAX.WARN}</expression>
                                    <name>ES {#ES.NODE}: Indexing latency is too high (over {$ELASTICSEARCH.INDEXING_LATENCY.MAX.WARN}ms for 5m)</name>
                                    <priority>WARNING</priority>
                                    <description>If the latency is increasing, it may indicate that you are indexing too many documents at the same time (Elasticsearch’s documentation &#13;
recommends starting with a bulk indexing size of 5 to 15 megabytes and increasing slowly from there).</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total time spent performing indexing</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.indexing.index_time_in_millis[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>ms</units>
                            <description>Total time in milliseconds spent performing indexing operations.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.indexing.index_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total number of indexing</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.indexing.index_total[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The total number of indexing operations.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.indexing.index_total.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Time spent throttling operations</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.indexing.throttle_time[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Time in seconds spent throttling operations for the last measuring span.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.indexing.throttle_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                                <step>
                                    <type>SIMPLE_CHANGE</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Time spent throttling merge operations</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.merges.total_throttled_time[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Time in seconds spent throttling merge operations for the last measuring span.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.merges.total_throttled_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                                <step>
                                    <type>SIMPLE_CHANGE</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Time spent throttling recovery operations</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.recovery.throttle_time[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Time in seconds spent throttling recovery operations for the last measuring span.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.recovery.throttle_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                                <step>
                                    <type>SIMPLE_CHANGE</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Rate of index refreshes</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.refresh.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of refresh operations per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.refresh.total.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Time spent performing refresh</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.refresh.time[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Time in seconds spent performing refresh operations for the last measuring span.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.refresh.total_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                                <step>
                                    <type>SIMPLE_CHANGE</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Rate of fetch</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.fetch.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of fetch operations per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.fetch_total.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Current fetch operations</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.fetch_current[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of fetch operations currently running.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.fetch_current.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Fetch latency</name>
                            <type>CALCULATED</type>
                            <key>es.node.indices.search.fetch_latency[{#ES.NODE}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>ms</units>
                            <params>last(es.node.indices.search.fetch_time_in_millis[{#ES.NODE}]) / ( last(es.node.indices.search.fetch_total[{#ES.NODE}]) + (last(es.node.indices.search.fetch_total[{#ES.NODE}]) = 0) )</params>
                            <description>The average fetch latency calculated by sampling the total number of fetches and the total elapsed time at regular intervals.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$ELASTICSEARCH.FETCH_LATENCY.MAX.WARN}</expression>
                                    <name>ES {#ES.NODE}: Fetch latency is too high (over {$ELASTICSEARCH.FETCH_LATENCY.MAX.WARN}ms for 5m)</name>
                                    <priority>WARNING</priority>
                                    <description>The fetch phase should typically take much less time than the query phase. If you notice this metric consistently increasing, &#13;
this could indicate a problem with slow disks, enriching of documents (highlighting the relevant text in search results, etc.), &#13;
or requesting too many results.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Time spent performing fetch</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.fetch_time[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Time in seconds spent performing fetch operations for the last measuring span.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.fetch_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                                <step>
                                    <type>SIMPLE_CHANGE</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total time spent performing fetch</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.fetch_time_in_millis[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>ms</units>
                            <description>Time in milliseconds spent performing fetch operations.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.fetch_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total number of fetch</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.fetch_total[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The total number of fetch operations.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.fetch_total.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Rate of queries</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.query.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of query operations per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.query_total.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Current query operations</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.query_current[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of query operations currently running.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.query_current.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Query latency</name>
                            <type>CALCULATED</type>
                            <key>es.node.indices.search.query_latency[{#ES.NODE}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>ms</units>
                            <params>last(es.node.indices.search.query_time_in_millis[{#ES.NODE}]) / 
( last(es.node.indices.search.query_total[{#ES.NODE}]) + (last(es.node.indices.search.query_total[{#ES.NODE}]) = 0) )</params>
                            <description>The average query latency calculated by sampling the total number of queries and the total elapsed time at regular intervals.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$ELASTICSEARCH.QUERY_LATENCY.MAX.WARN}</expression>
                                    <name>ES {#ES.NODE}: Query latency is too high (over {$ELASTICSEARCH.QUERY_LATENCY.MAX.WARN}ms for 5m)</name>
                                    <priority>WARNING</priority>
                                    <description>If latency exceeds a threshold, look for potential resource bottlenecks, or investigate whether you need to optimize your queries.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Time spent performing query</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.query_time[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Time in seconds spent performing query operations for the last measuring span.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.query_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                                <step>
                                    <type>SIMPLE_CHANGE</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total time spent performing query</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.query_time_in_millis[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>ms</units>
                            <description>Time in milliseconds spent performing query operations.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.query_time_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Total number of query</name>
                            <type>DEPENDENT</type>
                            <key>es.node.indices.search.query_total[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The total number of query operations.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].indices.search.query_total.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Amount of JVM heap committed</name>
                            <type>DEPENDENT</type>
                            <key>es.node.jvm.mem.heap_committed_in_bytes[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>The amount of memory, in bytes, available for use by the heap.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].jvm.mem.heap_committed_in_bytes.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Maximum JVM memory available for use</name>
                            <type>DEPENDENT</type>
                            <key>es.node.jvm.mem.heap_max_in_bytes[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>The maximum amount of memory, in bytes, available for use by the heap.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].jvm.mem.heap_max_in_bytes.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Amount of JVM heap currently in use</name>
                            <type>DEPENDENT</type>
                            <key>es.node.jvm.mem.heap_used_in_bytes[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>The memory, in bytes, currently in use by the heap.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].jvm.mem.heap_used_in_bytes.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Percent of JVM heap currently in use</name>
                            <type>DEPENDENT</type>
                            <key>es.node.jvm.mem.heap_used_percent[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>The percentage of memory currently in use by the heap.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].jvm.mem.heap_used_percent.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(1h)}&gt;{$ELASTICSEARCH.HEAP_USED.MAX.CRIT}</expression>
                                    <name>ES {#ES.NODE}: Percent of JVM heap in use is critical (over {$ELASTICSEARCH.HEAP_USED.MAX.CRIT}% for 1h)</name>
                                    <priority>HIGH</priority>
                                    <description>This indicates that the rate of garbage collection isn’t keeping up with the rate of garbage creation. &#13;
To address this problem, you can either increase your heap size (as long as it remains below the recommended &#13;
guidelines stated above), or scale out the cluster by adding more nodes.</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{min(1h)}&gt;{$ELASTICSEARCH.HEAP_USED.MAX.WARN}</expression>
                                    <name>ES {#ES.NODE}: Percent of JVM heap in use is high (over {$ELASTICSEARCH.HEAP_USED.MAX.WARN}% for 1h)</name>
                                    <priority>WARNING</priority>
                                    <description>This indicates that the rate of garbage collection isn’t keeping up with the rate of garbage creation. &#13;
To address this problem, you can either increase your heap size (as long as it remains below the recommended &#13;
guidelines stated above), or scale out the cluster by adding more nodes.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>ES {#ES.NODE}: Percent of JVM heap in use is critical (over {$ELASTICSEARCH.HEAP_USED.MAX.CRIT}% for 1h)</name>
                                            <expression>{SCS_Template App Elasticsearch Cluster by HTTP:es.node.jvm.mem.heap_used_percent[{#ES.NODE}].min(1h)}&gt;{$ELASTICSEARCH.HEAP_USED.MAX.CRIT}</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Node uptime</name>
                            <type>DEPENDENT</type>
                            <key>es.node.jvm.uptime[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>JVM uptime in seconds.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].jvm.uptime_in_millis.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&lt;10m</expression>
                                    <name>ES {#ES.NODE}: Node {#ES.NODE} has been restarted (uptime &lt; 10m)</name>
                                    <priority>INFO</priority>
                                    <description>Uptime is less than 10 minutes</description>
                                    <manual_close>YES</manual_close>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Refresh thread pool active threads</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.refresh.active[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of active threads in the refresh thread pool.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.refresh.active.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Refresh thread pool executor tasks completed</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.refresh.completed.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of tasks completed by the refresh thread pool executor.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.refresh.completed.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Refresh thread pool tasks in queue</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.refresh.queue[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of tasks in queue for the refresh thread pool.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.refresh.queue.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Refresh thread pool executor tasks rejected</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.refresh.rejected.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of tasks rejected by the refresh thread pool executor.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.refresh.rejected.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;0</expression>
                                    <name>ES {#ES.NODE}: Refresh thread pool executor has the rejected tasks (for 5m)</name>
                                    <priority>WARNING</priority>
                                    <description>The number of tasks rejected by the refresh thread pool executor is over 0 for 5m.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Search thread pool active threads</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.search.active[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of active threads in the search thread pool.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.search.active.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Search thread pool executor tasks completed</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.search.completed.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of tasks completed by the search thread pool executor.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.search.completed.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Search thread pool tasks in queue</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.search.queue[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of tasks in queue for the search thread pool.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.search.queue.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Search thread pool executor tasks rejected</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.search.rejected.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of tasks rejected by the search thread pool executor.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.search.rejected.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;0</expression>
                                    <name>ES {#ES.NODE}: Search thread pool executor has the rejected tasks (for 5m)</name>
                                    <priority>WARNING</priority>
                                    <description>The number of tasks rejected by the search thread pool executor is over 0 for 5m.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Write thread pool active threads</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.write.active[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of active threads in the write thread pool.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.write.active.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Write thread pool executor tasks completed</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.write.completed.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of tasks completed by the write thread pool executor.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.write.completed.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Write thread pool tasks in queue</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.write.queue[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The number of tasks in queue for the write thread pool.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.write.queue.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>ES {#ES.NODE}: Write thread pool executor tasks rejected</name>
                            <type>DEPENDENT</type>
                            <key>es.node.thread_pool.write.rejected.rate[{#ES.NODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of tasks rejected by the write thread pool executor.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>ES {#ES.NODE}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$..[?(@.name=='{#ES.NODE}')].thread_pool.write.rejected.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>es.nodes.get_stats</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;0</expression>
                                    <name>ES {#ES.NODE}: Write thread pool executor has the rejected tasks (for 5m)</name>
                                    <priority>WARNING</priority>
                                    <description>The number of tasks rejected by the write thread pool executor is over 0 for 5m.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>ES {#ES.NODE}: Latency</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.indices.search.query_latency[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.indices.indexing.index_latency[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.indices.search.fetch_latency[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.indices.flush.latency[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>ES {#ES.NODE}: Query load</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.indices.search.fetch_current[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.indices.search.query_current[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>ES {#ES.NODE}: Refresh thread pool</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.refresh.active[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.refresh.queue[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.refresh.completed.rate[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.refresh.rejected.rate[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>ES {#ES.NODE}: Search thread pool</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.search.active[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.search.queue[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.search.completed.rate[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.search.rejected.rate[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>ES {#ES.NODE}: Write thread pool</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.write.active[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.write.queue[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.write.completed.rate[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                                        <key>es.node.thread_pool.write.rejected.rate[{#ES.NODE}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <timeout>15s</timeout>
                    <url>{$ELASTICSEARCH.SCHEME}://{HOST.CONN}:{$ELASTICSEARCH.PORT}/_nodes/_all/nodes</url>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#ES.NODE}</lld_macro>
                            <path>$..name.first()</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.nodes.[*]</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$ELASTICSEARCH.FETCH_LATENCY.MAX.WARN}</macro>
                    <value>100</value>
                    <description>Maximum of fetch latency in milliseconds for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.FLUSH_LATENCY.MAX.WARN}</macro>
                    <value>100</value>
                    <description>Maximum of flush latency in milliseconds for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.HEAP_USED.MAX.CRIT}</macro>
                    <value>95</value>
                    <description>The maximum percent in the use of JVM heap for critically trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.HEAP_USED.MAX.WARN}</macro>
                    <value>85</value>
                    <description>The maximum percent in the use of JVM heap for warning trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.INDEXING_LATENCY.MAX.WARN}</macro>
                    <value>100</value>
                    <description>Maximum of indexing latency in milliseconds for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.PASSWORD}</macro>
                    <description>The password of the Elasticsearch.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.PORT}</macro>
                    <value>9200</value>
                    <description>The port of the Elasticsearch host.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.QUERY_LATENCY.MAX.WARN}</macro>
                    <value>100</value>
                    <description>Maximum of query latency in milliseconds for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.RESPONSE_TIME.MAX.WARN}</macro>
                    <value>10s</value>
                    <description>The ES cluster maximum response time in seconds for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.SCHEME}</macro>
                    <value>http</value>
                    <description>The scheme of the Elasticsearch (http/https).</description>
                </macro>
                <macro>
                    <macro>{$ELASTICSEARCH.USERNAME}</macro>
                    <description>The username of the Elasticsearch.</description>
                </macro>
            </macros>
        </template>
        <template>
            <template>SCS_Template App HAProxy</template>
            <name>SCS_Template App HAProxy</name>
            <groups>
                <group>
                    <name>compute</name>
                </group>
                <group>
                    <name>Load Balancers</name>
                </group>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>HAProxy Backend</name>
                </application>
                <application>
                    <name>HAProxy Backend Server</name>
                </application>
                <application>
                    <name>HAProxy Frontend</name>
                </application>
            </applications>
            <discovery_rules>
                <discovery_rule>
                    <name>HAProxy Backend</name>
                    <key>haproxy.be.discovery</key>
                    <delay>60</delay>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#HASV}</macro>
                                <value>BACKEND</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Bytes in</name>
                            <key>haproxy.be[{#HAPX},{#HASV},bin]</key>
                            <delay>60</delay>
                            <units>Bytes</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Bytes out</name>
                            <key>haproxy.be[{#HAPX},{#HASV},bout]</key>
                            <delay>60</delay>
                            <units>Bytes</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Total Downtime</name>
                            <key>haproxy.be[{#HAPX},{#HASV},downtime]</key>
                            <delay>60</delay>
                            <units>Seconds</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>SIMPLE_CHANGE</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Denied Requests</name>
                            <key>haproxy.be[{#HAPX},{#HASV},dreq]</key>
                            <delay>60</delay>
                            <units>Requests</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Denied Responses</name>
                            <key>haproxy.be[{#HAPX},{#HASV},dresp]</key>
                            <delay>60</delay>
                            <units>Responses</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Connection Errors</name>
                            <key>haproxy.be[{#HAPX},{#HASV},econ]</key>
                            <delay>60</delay>
                            <units>Connections</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Response Errors</name>
                            <key>haproxy.be[{#HAPX},{#HASV},eresp]</key>
                            <delay>60</delay>
                            <units>Responses</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 1XX responses</name>
                            <key>haproxy.be[{#HAPX},{#HASV},hrsp_1xx]</key>
                            <delay>60</delay>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 2XX responses</name>
                            <key>haproxy.be[{#HAPX},{#HASV},hrsp_2xx]</key>
                            <delay>60</delay>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 3XX responses</name>
                            <key>haproxy.be[{#HAPX},{#HASV},hrsp_3xx]</key>
                            <delay>60</delay>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 4XX responses</name>
                            <key>haproxy.be[{#HAPX},{#HASV},hrsp_4xx]</key>
                            <delay>60</delay>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 5XX responses</name>
                            <key>haproxy.be[{#HAPX},{#HASV},hrsp_5xx]</key>
                            <delay>60</delay>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP other responses</name>
                            <key>haproxy.be[{#HAPX},{#HASV},hrsp_other]</key>
                            <delay>60</delay>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Queued Requests</name>
                            <key>haproxy.be[{#HAPX},{#HASV},qcur]</key>
                            <delay>60</delay>
                            <units>Requests</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Current Sessions</name>
                            <key>haproxy.be[{#HAPX},{#HASV},scur]</key>
                            <delay>60</delay>
                            <units>Sessions</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Status</name>
                            <key>haproxy.be[{#HAPX},{#HASV},status]</key>
                            <delay>60</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Total Sessions</name>
                            <key>haproxy.be[{#HAPX},{#HASV},stot]</key>
                            <delay>60</delay>
                            <units>Sessions</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Redispatches</name>
                            <key>haproxy.be[{#HAPX},{#HASV},wredis]</key>
                            <delay>60</delay>
                            <units>Redispatches</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Retries</name>
                            <key>haproxy.be[{#HAPX},{#HASV},wretr]</key>
                            <delay>60</delay>
                            <units>Retries</units>
                            <applications>
                                <application>
                                    <name>HAProxy Backend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>HAProxy Frontend</name>
                    <key>haproxy.fe.discovery</key>
                    <delay>60</delay>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#HASV}</macro>
                                <value>FRONTEND</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Bytes in</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},bin]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <units>Bytes</units>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Bytes out</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},bout]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <units>Bytes</units>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Denied Requests</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},dreq]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <units>Req</units>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Denied Responses</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},dresp]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <units>Responses</units>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Request Errors</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},ereq]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <units>Req</units>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 1XX responses</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},hrsp_1xx]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 2XX responses</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},hrsp_2xx]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 3XX responses</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},hrsp_3xx]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 4XX responses</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},hrsp_4xx]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP 5XX responses</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},hrsp_5xx]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} HTTP other responses</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},hrsp_other]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Current Sessions</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},scur]</key>
                            <delay>60</delay>
                            <units>Sessions</units>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Total Sessions</name>
                            <key>haproxy.fe[{#HAPX},{#HASV},stot]</key>
                            <delay>60</delay>
                            <value_type>FLOAT</value_type>
                            <units>Sess</units>
                            <applications>
                                <application>
                                    <name>HAProxy Frontend</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>HAProxy - {#HAPX} Requests</name>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <graph_items>
                                <graph_item>
                                    <color>C80000</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},dreq]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>0000C8</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},ereq]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>HAProxy - {#HAPX} Responses</name>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <graph_items>
                                <graph_item>
                                    <color>C80000</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},hrsp_1xx]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>00C800</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},hrsp_2xx]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>0000C8</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},hrsp_3xx]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>C800C8</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},hrsp_4xx]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>00C8C8</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},hrsp_5xx]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <color>C8C800</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},hrsp_other]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>HAProxy - {#HAPX} Sessions</name>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>00C800</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},stot]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>HAProxy - {#HAPX} Traffic</name>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <graph_items>
                                <graph_item>
                                    <color>C80000</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},bin]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>00C800</color>
                                    <item>
                                        <host>SCS_Template App HAProxy</host>
                                        <key>haproxy.fe[{#HAPX},{#HASV},bout]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>HAProxy Backend Server</name>
                    <key>haproxy.sv.discovery</key>
                    <delay>60</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy - {#HASTAT} Status</name>
                            <key>haproxy.sv[{#HAPX},{#HASV},status]</key>
                            <delay>60</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <applications>
                                <application>
                                    <name>HAProxy Backend Server</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{str(UP)}=0</expression>
                                    <name>{#HASV} backend of {#HAPX} proxy down</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
        </template>
        <template>
            <template>SCS_Template App Memcached</template>
            <name>SCS_Template App Memcached</name>
            <description>Get Memcached metrics from plugin for the New Zabbix Agent (zabbix-agent2).&#13;
&#13;
You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/398623-discussion-thread-for-official-zabbix-template-memcached&#13;
&#13;
Template tooling version used: 0.35</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Memcached</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Memcached: Commands: FLUSH per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.commands.flush.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The flush_all command invalidates all items in the database. This operation incurs a performance penalty and shouldn’t take place in production, so check your debug scripts.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.cmd_flush</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Commands: GET per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.commands.get.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of GET requests received by server per second.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.cmd_get</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Commands: SET per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.commands.set.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of SET requests received by server per second.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.cmd_set</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Maximum number of bytes</name>
                    <type>DEPENDENT</type>
                    <key>memcached.config.limit_maxbytes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <description>Maximum number of bytes allowed in cache. You can adjust this setting via a config file or the command line while starting your Memcached server.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.limit_maxbytes</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>30m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Open connections</name>
                    <type>DEPENDENT</type>
                    <key>memcached.connections.current</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of clients presently connected</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.curr_connections</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Max connections</name>
                    <type>DEPENDENT</type>
                    <key>memcached.connections.max</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Max number of concurrent connections</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.max_connections</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>30m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Queued connections per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.connections.queued.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of times that memcached has hit its connections limit and disabled its listener</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.listen_disabled_num</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$MEMCACHED.CONN.QUEUED.MAX.WARN}</expression>
                            <name>Memcached: Too many queued connections (over {$MEMCACHED.CONN.QUEUED.MAX.WARN} in 5m)</name>
                            <priority>WARNING</priority>
                            <description>The max number of connections is reachedand and a new connection had to wait in the queue as a result.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Memcached: New connections per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.connections.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of connections opened per second</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_connections</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Connection structures</name>
                    <type>DEPENDENT</type>
                    <key>memcached.connections.structures</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of  connection structures allocated by the server</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.connection_structures</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Throttled connections</name>
                    <type>DEPENDENT</type>
                    <key>memcached.connections.throttled.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of times a client connection was throttled. When sending GETs in batch mode and the connection contains too many requests (limited by -R parameter) the connection might be throttled to prevent starvation.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.conn_yields</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$MEMCACHED.CONN.THROTTLED.MAX.WARN}</expression>
                            <name>Memcached: Too many throttled connections (over {$MEMCACHED.CONN.THROTTLED.MAX.WARN} in 5m)</name>
                            <priority>WARNING</priority>
                            <description>Number of times a client connection was throttled is too hight.&#13;
When sending GETs in batch mode and the connection contains too many requests (limited by -R parameter) the connection might be throttled to prevent starvation.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Memcached: CPU sys</name>
                    <type>DEPENDENT</type>
                    <key>memcached.cpu.sys</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>System CPU consumed by the Memcached server</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.rusage_system</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>Memcached: Failed to fetch info data (or no data for 30m)</name>
                            <priority>WARNING</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Memcached: Service is down</name>
                                    <expression>{SCS_Template App Memcached:memcached.ping[&quot;{$MEMCACHED.CONN.URI}&quot;].last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Memcached: CPU user</name>
                    <type>DEPENDENT</type>
                    <key>memcached.cpu.user</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>User CPU consumed by the Memcached server</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.rusage_user</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Ping</name>
                    <key>memcached.ping[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Memcached: Service is down</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Memcached: Process id</name>
                    <type>DEPENDENT</type>
                    <key>memcached.process_id</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>PID of the server process</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.pid</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Bytes used</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.bytes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>B</units>
                    <description>Current number of bytes used to store items.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.bytes</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Read bytes per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.bytes_read.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>Bps</units>
                    <description>The network's read rate per second in B/sec</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.bytes_read</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Written bytes per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.bytes_written.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>Bps</units>
                    <description>The network's read rate per second in B/sec</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.bytes_written</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Current number of items stored</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.curr_items</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Current number of items stored by this instance.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.curr_items</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Evictions per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.evictions.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>&quot;An eviction is when an item that still has time to live is removed from the cache because a brand new item needs to be allocated.&#13;
The item is selected with a pseudo-LRU mechanism.&#13;
A high number of evictions coupled with a low hit rate means your application is setting a large number of keys that are never used again.&quot;</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.evictions</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Hits per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.hits.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of successful GET requests (items requested and found) per second.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.get_hits</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Misses per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.misses.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of missed GET requests (items requested but not found) per second.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.get_misses</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Threads</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.threads</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of worker threads requested</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.threads</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: New items per second</name>
                    <type>DEPENDENT</type>
                    <key>memcached.stats.total_items.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of new items stored per second.</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.total_items</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>Memcached: Get status</name>
                    <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Memcached: Uptime</name>
                    <type>DEPENDENT</type>
                    <key>memcached.uptime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>s</units>
                    <description>Number of seconds since Memcached server start</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.uptime</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}&lt;10m</expression>
                            <name>Memcached: has been restarted (uptime &lt; 10m)</name>
                            <priority>INFO</priority>
                            <description>Uptime is less than 10 minutes</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Memcached: Memcached version</name>
                    <type>DEPENDENT</type>
                    <key>memcached.version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Version of the Memcached server</description>
                    <applications>
                        <application>
                            <name>Memcached</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.version</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>memcached.stats[&quot;{$MEMCACHED.CONN.URI}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Memcached: Version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>Memcached version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <macros>
                <macro>
                    <macro>{$MEMCACHED.CONN.PRC.MAX.WARN}</macro>
                    <value>80</value>
                    <description>Maximum percentage of connected clients</description>
                </macro>
                <macro>
                    <macro>{$MEMCACHED.CONN.QUEUED.MAX.WARN}</macro>
                    <value>1</value>
                    <description>Maximum number of queued connections per second</description>
                </macro>
                <macro>
                    <macro>{$MEMCACHED.CONN.THROTTLED.MAX.WARN}</macro>
                    <value>1</value>
                    <description>Maximum number of throttled connections per second</description>
                </macro>
                <macro>
                    <macro>{$MEMCACHED.CONN.URI}</macro>
                    <value>tcp://{$IP_MANAGEMENT}:11211</value>
                    <description>Connection string in the URI format (password is not used). This param overwrites a value configured in the &quot;Plugins.Memcached.Uri&quot; option of the configuration file (if it's set), otherwise, the plugin's default value is used: &quot;tcp://localhost:11211&quot;</description>
                </macro>
                <macro>
                    <macro>{$MEMCACHED.MEM.PUSED.MAX.WARN}</macro>
                    <value>90</value>
                    <description>Maximum percentage of memory used</description>
                </macro>
            </macros>
        </template>
        <template>
            <template>SCS_Template App OpenStack Ceph</template>
            <name>SCS_Template App OpenStack Ceph</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Ceph</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Ceph health is OK</name>
                    <key>ceph.health</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Ceph health is not OK from {HOST.NAME}</name>
                            <priority>DISASTER</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Ceph Cluster</template>
            <name>SCS_Template App OpenStack Ceph Cluster</name>
            <groups>
                <group>
                    <name>Ceph Cluster</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Ceph</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Ceph monitor_count</name>
                    <type>TRAP</type>
                    <key>monitor_count</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph objects_count</name>
                    <type>TRAP</type>
                    <key>objects_count</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph osd_count_down</name>
                    <type>TRAP</type>
                    <key>osd_count_down</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph osd_count_in</name>
                    <type>TRAP</type>
                    <key>osd_count_in</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph osd_count_out</name>
                    <type>TRAP</type>
                    <key>osd_count_out</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph osd_count_up</name>
                    <type>TRAP</type>
                    <key>osd_count_up</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_bytes_free</name>
                    <type>TRAP</type>
                    <key>pg_bytes_free</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_bytes_total</name>
                    <type>TRAP</type>
                    <key>pg_bytes_total</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_bytes_used</name>
                    <type>TRAP</type>
                    <key>pg_bytes_used</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_count</name>
                    <type>TRAP</type>
                    <key>pg_count</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_data_bytes</name>
                    <type>TRAP</type>
                    <key>pg_data_bytes</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_active</name>
                    <type>TRAP</type>
                    <key>pg_state_count_active</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_backfill</name>
                    <type>TRAP</type>
                    <key>pg_state_count_backfill</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_backfilltoofull</name>
                    <type>TRAP</type>
                    <key>pg_state_count_backfilltoofull</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_clean</name>
                    <type>TRAP</type>
                    <key>pg_state_count_clean</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_creating</name>
                    <type>TRAP</type>
                    <key>pg_state_count_creating</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_degraded</name>
                    <type>TRAP</type>
                    <key>pg_state_count_degraded</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_down</name>
                    <type>TRAP</type>
                    <key>pg_state_count_down</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_incomplete</name>
                    <type>TRAP</type>
                    <key>pg_state_count_incomplete</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_inconsistent</name>
                    <type>TRAP</type>
                    <key>pg_state_count_inconsistent</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_peered</name>
                    <type>TRAP</type>
                    <key>pg_state_count_peered</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_peering</name>
                    <type>TRAP</type>
                    <key>pg_state_count_peering</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_recovering</name>
                    <type>TRAP</type>
                    <key>pg_state_count_recovering</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_remapped</name>
                    <type>TRAP</type>
                    <key>pg_state_count_remapped</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_repair</name>
                    <type>TRAP</type>
                    <key>pg_state_count_repair</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_replay</name>
                    <type>TRAP</type>
                    <key>pg_state_count_replay</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_scrubbing</name>
                    <type>TRAP</type>
                    <key>pg_state_count_scrubbing</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_splitting</name>
                    <type>TRAP</type>
                    <key>pg_state_count_splitting</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_stale</name>
                    <type>TRAP</type>
                    <key>pg_state_count_stale</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_undersized</name>
                    <type>TRAP</type>
                    <key>pg_state_count_undersized</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pg_state_count_waitbackfill</name>
                    <type>TRAP</type>
                    <key>pg_state_count_waitbackfill</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pool_count</name>
                    <type>TRAP</type>
                    <key>pool_count</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pool_total_bytes_free</name>
                    <type>TRAP</type>
                    <key>pool_total_bytes_free</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pool_total_bytes_total</name>
                    <type>TRAP</type>
                    <key>pool_total_bytes_total</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pool_total_bytes_used</name>
                    <type>TRAP</type>
                    <key>pool_total_bytes_used</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Ceph pool_total_percent_free</name>
                    <type>TRAP</type>
                    <key>pool_total_percent_free</key>
                    <delay>0</delay>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}&lt;20</expression>
                            <name>Ceph free capacity is low (&lt; 20%)</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Ceph pool_total_percent_used</name>
                    <type>TRAP</type>
                    <key>pool_total_percent_used</key>
                    <delay>0</delay>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Probe ceph metrics</name>
                    <key>probe.ceph</key>
                    <delay>30</delay>
                    <history>15d</history>
                    <trends>100d</trends>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}&lt;&gt;0</expression>
                            <name>Cannot retrieve Ceph metrics form {HOST.NAME1} node</name>
                            <priority>HIGH</priority>
                            <description>Cannot trigger Ceph metric, check logs /var/log/zabbix/sender.log</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Ceph quorum_count</name>
                    <type>TRAP</type>
                    <key>quorum_count</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Ceph</name>
                        </application>
                    </applications>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Ceph MON</template>
            <name>SCS_Template App OpenStack Ceph MON</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Ceph MON</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Number of ceph-mon processes</name>
                    <key>proc.num[,,,/usr/bin/ceph-mon]</key>
                    <delay>60</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Ceph MON</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Ceph MON is not running on {HOSTNAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Ceph OSD</template>
            <name>SCS_Template App OpenStack Ceph OSD</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Ceph OSD</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Number of running Ceph OSD processes</name>
                    <key>proc.num[,,,/usr/bin/ceph-osd]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Ceph OSD</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Ceph OSD process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Cinder API</template>
            <name>SCS_Template App OpenStack Cinder API</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Cinder API</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Cinder API Server is listening on port</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[http,{$IP_MANAGEMENT},8776]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Cinder API</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Cinder API Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Cinder Scheduler</template>
            <name>SCS_Template App OpenStack Cinder Scheduler</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Cinder Scheduler</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Cinder Scheduler Server process is running</name>
                    <key>proc.num[,,,bin/python.*bin/cinder-scheduler]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Cinder Scheduler</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Cinder Scheduler process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Cinder Volume</template>
            <name>SCS_Template App OpenStack Cinder Volume</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Cinder Volume</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Cinder Volume process is running</name>
                    <key>proc.num[,,,bin/python.*bin/cinder-volume]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Cinder Volume</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Cinder Volume process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Glance API</template>
            <name>SCS_Template App OpenStack Glance API</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Glance API</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Glance API Server is listening on port</name>
                    <key>net.tcp.service[http,{$IP_MANAGEMENT},9292]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Glance API</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Glance API Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Glance API Server process is running</name>
                    <key>proc.num[python,,,glance-api]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Glance API</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Glance API Server process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack HA RabbitMQ</template>
            <name>SCS_Template App OpenStack HA RabbitMQ</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>RabbitMQ</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>RabbitMQ EPMD is listening on port</name>
                    <key>net.tcp.port[,4369]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>RabbitMQ EPMD service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>RabbitMQ Server is listening on port</name>
                    <key>net.tcp.port[,41055]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>RabbitMQ Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>RabbitMQ AMQP is listening on port</name>
                    <key>net.tcp.port[{$IP_MANAGEMENT},5673]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>RabbitMQ Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>RabbitMQ BEAM process is running</name>
                    <key>proc.num[,,,bin/beam]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>RabbitMQ BEAM process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>RabbitMQ EPMD process is running</name>
                    <key>proc.num[,,,epmd -daemon]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>RabbitMQ EPMD process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>RabbitMQ missing nodes</name>
                    <key>rabbitmq.missing.nodes</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}&gt;0</expression>
                            <name>RabbitMQ nodes missing from cluster</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>RabbitMQ missing queues</name>
                    <key>rabbitmq.missing.queues</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>RabbitMQ queue items</name>
                    <key>rabbitmq.queue.items</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>RabbitMQ queues without consumers</name>
                    <key>rabbitmq.queues.without.consumers</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>RabbitMQ unmirrored queues</name>
                    <key>rabbitmq.unmirror.queues</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>RabbitMQ</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}&gt;0</expression>
                            <name>RabbitMQ queues are not mirrored</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Horizon</template>
            <name>SCS_Template App OpenStack Horizon</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Horizon</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Horizon HTTP Server is listening on port</name>
                    <key>net.tcp.service[http,10.70.52.10,80]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Horizon</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Horizon HTTP Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Horizon HTTPS Server is listening on port</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[https,{$IP_MANAGEMENT},443]</key>
                    <delay>60</delay>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Horizon</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Horizon HTTPS Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Horizon HTTP Server process is running</name>
                    <key>proc.num[,,,apache2]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Horizon</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Horizon HTTP Server process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Keystone</template>
            <name>SCS_Template App OpenStack Keystone</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Keystone</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Keystone API Server is listening on port</name>
                    <key>net.tcp.service[http,{$IP_MANAGEMENT},5000]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Keystone</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Keystone API Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Keystone Admin API Server is listening on port</name>
                    <key>net.tcp.service[http,{$IP_MANAGEMENT},35357]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Keystone</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Keystone Admin API Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Keystone Admin Server process is running</name>
                    <key>proc.num[,,,keystone-ad]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Keystone</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Keystone Admin Server process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Keystone Main Server process is running</name>
                    <key>proc.num[,,,keystone-main]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Keystone</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Keystone Main Server process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Libvirt</template>
            <name>SCS_Template App OpenStack Libvirt</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Libvirt</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Libvirtd process is running</name>
                    <key>proc.num[libvirtd,root,,]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Libvirt</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Libvirtd process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Neutron DHCP Agent</template>
            <name>SCS_Template App OpenStack Neutron DHCP Agent</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Neutron DHCP Agent</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Neutron DHCP Agent process is running</name>
                    <key>proc.num[,,,neutron-dhcp-agent]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Neutron DHCP Agent</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Neutron DHCP Agent process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Neutron L3 Agent</template>
            <name>SCS_Template App OpenStack Neutron L3 Agent</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Neutron L3 Agent</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Neutron L3 Agent process is running</name>
                    <key>proc.num[,,,bin/python.*bin/neutron-l3-agent]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Neutron L3 Agent</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Neutron L3 Agent process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Neutron Metadata Agent</template>
            <name>SCS_Template App OpenStack Neutron Metadata Agent</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Neutron Metadata Agent</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Neutron Metadata Agent process is running</name>
                    <key>proc.num[,,,bin/python.*bin/neutron-metadata-agent]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Neutron Metadata Agent</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Neutron Metadata Agent process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Neutron OVS Agent</template>
            <name>SCS_Template App OpenStack Neutron OVS Agent</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Neutron OVS Agent</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Neutron OVS Agent process is running</name>
                    <key>proc.num[,,,bin/python.*bin/neutron-openvswitch-agent]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Neutron OVS Agent</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Neutron OVS Agent process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Neutron Server</template>
            <name>SCS_Template App OpenStack Neutron Server</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Neutron Server</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Neutron Server is listening on port</name>
                    <key>net.tcp.service[http,{$IP_MANAGEMENT},9696]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Neutron Server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Neutron Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Neutron Server process is running</name>
                    <key>proc.num[,,,bin/python.*bin/neutron-server]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Neutron Server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Neutron Server process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Nova API</template>
            <name>SCS_Template App OpenStack Nova API</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Nova API</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Nova API Server process is running</name>
                    <key>proc.num[,,,bin/python.*bin/nova-api]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Nova API</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Nova API process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Nova API OSAPI</template>
            <name>SCS_Template App OpenStack Nova API OSAPI</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Nova API OSAPI</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Nova API OSAPI Compute Server is listening on port</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[http,{$IP_MANAGEMENT},8774]</key>
                    <delay>60</delay>
                    <applications>
                        <application>
                            <name>Nova API OSAPI</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Nova API OSAPI Compute Server service is down on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Nova Compute</template>
            <name>SCS_Template App OpenStack Nova Compute</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Nova Compute</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Nova Compute Server process is running</name>
                    <key>proc.num[,,,bin/python.*bin/nova-compute]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Nova Compute</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Nova Compute process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Nova Conductor</template>
            <name>SCS_Template App OpenStack Nova Conductor</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Nova Conductor</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Nova Conductor Server process is running</name>
                    <key>proc.num[,,,bin/python.*bin/nova-conductor]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Nova Conductor</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Nova Conductor process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Nova novncproxy</template>
            <name>SCS_Template App OpenStack Nova novncproxy</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Nova novncproxy</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Nova novncproxy Server process is running</name>
                    <key>proc.num[,,,bin/python.*bin/nova-novncproxy]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Nova novncproxy</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Nova novncproxy process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Nova Scheduler</template>
            <name>SCS_Template App OpenStack Nova Scheduler</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Nova Scheduler</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Nova Scheduler Server process is running</name>
                    <key>proc.num[,,,bin/python.*bin/nova-scheduler]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Nova Scheduler</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Nova Scheduler process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App OpenStack Open vSwitch</template>
            <name>SCS_Template App OpenStack Open vSwitch</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Open vSwitch</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Open vSwitch Server process is running</name>
                    <key>proc.num[,root,,ovs-vswitchd]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Open vSwitch</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Open vSwitch Server process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Open vSwitch DB Server server process is running</name>
                    <key>proc.num[,root,,ovsdb-server]</key>
                    <delay>30</delay>
                    <applications>
                        <application>
                            <name>Open vSwitch</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}=0</expression>
                            <name>Open vSwitch DB Server process is not running on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App SSH Service</template>
            <name>SCS_Template App SSH Service</name>
            <groups>
                <group>
                    <name>Templates/Modules</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>SSH service</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>SSH service is running</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[ssh]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>SSH service</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{max(#3)}=0</expression>
                            <name>SSH service is down on {HOST.NAME}</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
        </template>
        <template>
            <template>SCS_Template App Zabbix Server</template>
            <name>SCS_Template App Zabbix Server</name>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Zabbix server</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Zabbix LLD queue</name>
                    <type>INTERNAL</type>
                    <key>zabbix[lld_queue]</key>
                    <history>1w</history>
                    <description>Count of values enqueued in the preprocessing queue.</description>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Zabbix preprocessing queue</name>
                    <type>INTERNAL</type>
                    <key>zabbix[preprocessing_queue]</key>
                    <history>1w</history>
                    <description>Count of values enqueued in the preprocessing queue.</description>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Utilization of alerter internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,alerter,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix alerter processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of alert manager internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,alert manager,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix alert manager processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of alert syncer internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,alert syncer,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix alert syncer processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of configuration syncer internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,configuration syncer,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix configuration syncer processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of discoverer data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,discoverer,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix discoverer processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of escalator internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,escalator,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix escalator processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of history syncer internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,history syncer,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix history syncer processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of housekeeper internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,housekeeper,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(30m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(30m)}&lt;65</recovery_expression>
                            <name>Zabbix housekeeper processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of http poller data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,http poller,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix http poller processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of icmp pinger data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,icmp pinger,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix icmp pinger processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of ipmi manager internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,ipmi manager,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix ipmi manager processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of ipmi poller data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,ipmi poller,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix ipmi poller processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of java poller data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,java poller,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix java poller processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of LLD manager internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,lld manager,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix LLD manager processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of LLD worker internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,lld worker,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix LLD worker processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of poller data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,poller,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix poller processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of preprocessing manager internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,preprocessing manager,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix preprocessing manager processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of preprocessing worker internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,preprocessing worker,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix preprocessing worker processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of proxy poller data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,proxy poller,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix proxy poller processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of self-monitoring internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,self-monitoring,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{min(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{min(10m)}&lt;65</recovery_expression>
                            <name>Zabbix self-monitoring processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of snmp trapper data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,snmp trapper,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix snmp trapper processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of task manager internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,task manager,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix task manager processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of timer internal processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,timer,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix timer processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of trapper data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,trapper,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix trapper processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of unreachable poller data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,unreachable poller,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix unreachable poller processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Utilization of vmware data collector processes, in %</name>
                    <type>INTERNAL</type>
                    <key>zabbix[process,vmware collector,avg,busy]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(10m)}&gt;75</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{avg(10m)}&lt;65</recovery_expression>
                            <name>Zabbix vmware collector processes more than 75% busy</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix queue over 10 minutes</name>
                    <type>INTERNAL</type>
                    <key>zabbix[queue,10m]</key>
                    <delay>10m</delay>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{min(10m)}&gt;100</expression>
                            <name>More than 100 items having missing data for more than 10 minutes</name>
                            <priority>WARNING</priority>
                            <description>zabbix[queue,10m] item is collecting data about how many items are missing data for more than 10 minutes</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix queue</name>
                    <type>INTERNAL</type>
                    <key>zabbix[queue]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Zabbix configuration cache, % used</name>
                    <type>INTERNAL</type>
                    <key>zabbix[rcache,buffer,pused]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{max(10m)}&gt;75</expression>
                            <name>More than 75% used in the configuration cache</name>
                            <priority>AVERAGE</priority>
                            <description>Consider increasing CacheSize in the zabbix_server.conf configuration file</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix value cache, % used</name>
                    <type>INTERNAL</type>
                    <key>zabbix[vcache,buffer,pused]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{max(10m)}&gt;95</expression>
                            <name>More than 95% used in the value cache</name>
                            <priority>AVERAGE</priority>
                            <description>Consider increasing ValueCacheSize in the zabbix_server.conf configuration file</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix value cache hits</name>
                    <type>INTERNAL</type>
                    <key>zabbix[vcache,cache,hits]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>vps</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Zabbix value cache misses</name>
                    <type>INTERNAL</type>
                    <key>zabbix[vcache,cache,misses]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>vps</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Zabbix value cache operating mode</name>
                    <type>INTERNAL</type>
                    <key>zabbix[vcache,cache,mode]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Value cache operating mode</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{last()}=1</expression>
                            <name>Zabbix value cache working in low memory mode</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix vmware cache, % used</name>
                    <type>INTERNAL</type>
                    <key>zabbix[vmware,buffer,pused]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{max(10m)}&gt;75</expression>
                            <name>More than 75% used in the vmware cache</name>
                            <priority>AVERAGE</priority>
                            <description>Consider increasing VMwareCacheSize in the zabbix_server.conf configuration file</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix history write cache, % used</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,history,pused]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{max(10m)}&gt;75</expression>
                            <name>More than 75% used in the history cache</name>
                            <priority>AVERAGE</priority>
                            <description>Consider increasing HistoryCacheSize in the zabbix_server.conf configuration file</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix history index cache, % used</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,index,pused]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{max(10m)}&gt;75</expression>
                            <name>More than 75% used in the history index cache</name>
                            <priority>AVERAGE</priority>
                            <description>Consider increasing HistoryIndexCacheSize in the zabbix_server.conf configuration file</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix trend write cache, % used</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,trend,pused]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{max(10m)}&gt;75</expression>
                            <name>More than 75% used in the trends cache</name>
                            <priority>AVERAGE</priority>
                            <description>Consider increasing TrendCacheSize in the zabbix_server.conf configuration file</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Number of processed numeric (float) values per second</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,values,float]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Number of processed log values per second</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,values,log]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Number of processed not supported values per second</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,values,not supported]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Number of processed character values per second</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,values,str]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Number of processed text values per second</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,values,text]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Number of processed numeric (unsigned) values per second</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,values,uint]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Number of processed values per second</name>
                    <type>INTERNAL</type>
                    <key>zabbix[wcache,values]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix server</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                </item>
            </items>
            <screens>
                <screen>
                    <name>Zabbix server health</name>
                    <hsize>2</hsize>
                    <vsize>3</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Zabbix server performance</name>
                                <host>SCS_Template App Zabbix Server</host>
                            </resource>
                            <width>500</width>
                            <height>212</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>1</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Zabbix data gathering process busy %</name>
                                <host>SCS_Template App Zabbix Server</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>1</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Zabbix internal process busy %</name>
                                <host>SCS_Template App Zabbix Server</host>
                            </resource>
                            <width>500</width>
                            <height>114</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>1</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Zabbix cache usage, % used</name>
                                <host>SCS_Template App Zabbix Server</host>
                            </resource>
                            <width>500</width>
                            <height>128</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>1</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Value cache effectiveness</name>
                                <host>SCS_Template App Zabbix Server</host>
                            </resource>
                            <width>500</width>
                            <height>160</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Zabbix internal queues</name>
                                <host>SCS_Template App Zabbix Server</host>
                            </resource>
                            <width>500</width>
                            <height>160</height>
                            <x>1</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
        <template>
            <template>SCS_Template DB MySQL</template>
            <name>SCS_Template DB MySQL</name>
            <description>Requirements for template operation:&#13;
1. Create MySQL user for monitoring. For example:&#13;
CREATE USER 'zbx_monitor'@'%' IDENTIFIED BY '&lt;password&gt;';&#13;
GRANT USAGE,REPLICATION CLIENT,PROCESS,SHOW DATABASES,SHOW VIEW ON *.* TO 'zbx_monitor'@'%';&#13;
For more information please read the MYSQL documentation https://dev.mysql.com/doc/refman/8.0/en/grant.html.&#13;
2. Set in the {$MYSQL.DSN} macro the data source name of the MySQL instance either session name from Zabbix agent 2 configuration file or URI &lt;protocol(host:port or /path/to/socket)/&gt;.&#13;
Examples: MySQL1, tcp://localhost:3306, tcp://172.16.0.10, unix:/var/run/mysql.sock&#13;
For more information about MySQL Unix socket file please read the MySQL documentation https://dev.mysql.com/doc/refman/8.0/en/problems-with-mysql-sock.html.&#13;
3. If you had set URI in the {$MYSQL.DSN}, please define the user name and password in host macros ({$MYSQL.USER} and {$MYSQL.PASSWORD}).&#13;
Leave macros {$MYSQL.USER} and {$MYSQL.PASSWORD} empty if you use a session name. Set the user name and password in the Plugins.Mysql.&lt;...&gt; section of your Zabbix agent 2 configuration file.&#13;
For more information about configuring the Zabbix MySQL plugin please read the documentation https://git.zabbix.com/projects/ZBX/repos/zabbix/browse/src/go/plugins/mysql/README.md.&#13;
&#13;
&#13;
You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/384189-discussion-thread-for-official-zabbix-template-db-mysql&#13;
&#13;
Template tooling version used: 0.36</description>
            <groups>
                <group>
                    <name>Templates/Databases</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>MySQL</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>MySQL: Aborted clients per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.aborted_clients.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of connections that were aborted because the client died without closing the connection properly.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Aborted_clients</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Aborted connections per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.aborted_connects.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of failed attempts to connect to the MySQL server.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Aborted_connects</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$MYSQL.ABORTED_CONN.MAX.WARN}</expression>
                            <name>MySQL: Server has aborted connections (over {$MYSQL.ABORTED_CONN.MAX.WARN} for 5m)</name>
                            <priority>AVERAGE</priority>
                            <description>The number of failed attempts to connect to the MySQL server is more than {$MYSQL.ABORTED_CONN.MAX.WARN} in the last 5 minutes.</description>
                            <dependencies>
                                <dependency>
                                    <name>MySQL: Refused connections (max_connections limit reached)</name>
                                    <expression>{SCS_Template DB MySQL:mysql.connection_errors_max_connections.rate.last()}&gt;0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Buffer pool efficiency</name>
                    <type>CALCULATED</type>
                    <key>mysql.buffer_pool_efficiency</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>last(mysql.innodb_buffer_pool_reads) / 
( last(mysql.innodb_buffer_pool_read_requests) + 
( last(mysql.innodb_buffer_pool_read_requests) = 0 ) ) * 100 * 
( last(mysql.innodb_buffer_pool_read_requests) &gt; 0 )</params>
                    <description>The item shows how effectively the buffer pool is serving reads.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>MySQL: Buffer pool utilization</name>
                    <type>CALCULATED</type>
                    <key>mysql.buffer_pool_utilization</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>( last(mysql.innodb_buffer_pool_pages_total) - 
last(mysql.innodb_buffer_pool_pages_free) ) / 
( last(mysql.innodb_buffer_pool_pages_total) + 
( last(mysql.innodb_buffer_pool_pages_total) = 0 ) ) * 100 * 
( last(mysql.innodb_buffer_pool_pages_total) &gt; 0 )</params>
                    <description>Ratio of used to total pages in the buffer pool.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{max(5m)}&lt;{$MYSQL.BUFF_UTIL.MIN.WARN}</expression>
                            <name>MySQL: Buffer pool utilization is too low (less {$MYSQL.BUFF_UTIL.MIN.WARN}% for 5m)</name>
                            <priority>WARNING</priority>
                            <description>The buffer pool utilization is less than {$MYSQL.BUFF_UTIL.MIN.WARN}% in the last 5 minutes. This means that there is a lot of unused RAM allocated for the buffer pool, which you can easily reallocate at the moment.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Bytes received</name>
                    <type>DEPENDENT</type>
                    <key>mysql.bytes_received.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>Bps</units>
                    <description>The number of bytes received from all clients.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Bytes_received</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Bytes sent</name>
                    <type>DEPENDENT</type>
                    <key>mysql.bytes_sent.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>Bps</units>
                    <description>The number of bytes sent to all clients.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Bytes_sent</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Command Delete per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.com_delete.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Com_delete counter variable indicates the number of times the delete statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Com_delete</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Command Insert per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.com_insert.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Com_insert counter variable indicates the number of times the insert statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Com_insert</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Command Select per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.com_select.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Com_select counter variable indicates the number of times the select statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Com_select</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Command Update per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.com_update.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Com_update counter variable indicates the number of times the update statement has been executed.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Com_update</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Connections per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.connections.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of connection attempts (successful or not) to the MySQL server.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Connections</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Connection errors accept per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.connection_errors_accept.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of errors that occurred during calls to accept() on the listening port.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Connection_errors_accept</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Connection errors internal per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.connection_errors_internal.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of refused connections due to internal server errors, for example out of memory errors, or failed thread starts.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Connection_errors_internal</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Connection errors max connections per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.connection_errors_max_connections.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of refused connections due to the max_connections limit being reached.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Connection_errors_max_connections</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;0</expression>
                            <name>MySQL: Refused connections (max_connections limit reached)</name>
                            <priority>AVERAGE</priority>
                            <description>Number of refused connections due to the max_connections limit being reached.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Connection errors peer address per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.connection_errors_peer_address.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of errors while searching for the connecting client IP address.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Connection_errors_peer_address</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Connection errors select per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.connection_errors_select.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of errors during calls to select() or poll() on the listening port. The client would not necessarily have been rejected in these cases.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Connection_errors_select</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Connection errors tcpwrap per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.connection_errors_tcpwrap.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of connections the libwrap library refused.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Connection_errors_tcpwrap</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Created tmp tables on disk per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.created_tmp_disk_tables.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of internal on-disk temporary tables created by the server while executing statements.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Created_tmp_disk_tables</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$MYSQL.CREATED_TMP_DISK_TABLES.MAX.WARN}</expression>
                            <name>MySQL: Number of on-disk temporary tables created per second is high (over {$MYSQL.CREATED_TMP_DISK_TABLES.MAX.WARN} for 5m)</name>
                            <priority>WARNING</priority>
                            <description>Possibly the application using the database is in need of query optimization.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Created tmp files on disk per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.created_tmp_files.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>How many temporary files mysqld has created.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Created_tmp_files</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$MYSQL.CREATED_TMP_FILES.MAX.WARN}</expression>
                            <name>MySQL: Number of temporary files created per second is high (over {$MYSQL.CREATED_TMP_FILES.MAX.WARN} for 5m)</name>
                            <priority>WARNING</priority>
                            <description>Possibly the application using the database is in need of query optimization.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Created tmp tables on memory per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.created_tmp_tables.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of internal temporary tables created by the server while executing statements.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Created_tmp_tables</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$MYSQL.CREATED_TMP_TABLES.MAX.WARN}</expression>
                            <name>MySQL: Number of internal temporary tables created per second is high (over {$MYSQL.CREATED_TMP_TABLES.MAX.WARN} for 5m)</name>
                            <priority>WARNING</priority>
                            <description>Possibly the application using the database is in need of query optimization.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Get status variables</name>
                    <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>The item gets server global status information.</description>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>MySQL: InnoDB buffer pool pages free</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_buffer_pool_pages_free</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The total size of the InnoDB buffer pool, in pages.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_buffer_pool_pages_free</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: InnoDB buffer pool pages total</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_buffer_pool_pages_total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The total size of the InnoDB buffer pool, in pages.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_buffer_pool_pages_total</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: InnoDB buffer pool reads</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_buffer_pool_reads</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of logical reads that InnoDB could not satisfy from the buffer pool, and had to read directly from disk.</description>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_buffer_pool_reads</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: InnoDB buffer pool reads per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_buffer_pool_reads.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of logical reads per second that InnoDB could not satisfy from the buffer pool, and had to read directly from disk.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_buffer_pool_reads</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: InnoDB buffer pool read requests</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_buffer_pool_read_requests</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of logical read requests.</description>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_buffer_pool_read_requests</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: InnoDB buffer pool read requests per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_buffer_pool_read_requests.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of logical read requests per second.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_buffer_pool_read_requests</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: InnoDB row lock time</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_row_lock_time</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>The total time spent in acquiring row locks for InnoDB tables, in milliseconds.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_row_lock_time</params>
                        </step>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: InnoDB row lock time max</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_row_lock_time_max</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>The maximum time to acquire a row lock for InnoDB tables, in milliseconds.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_row_lock_time_max</params>
                        </step>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: InnoDB row lock waits</name>
                    <type>DEPENDENT</type>
                    <key>mysql.innodb_row_lock_waits</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of times operations on InnoDB tables had to wait for a row lock.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Innodb_row_lock_waits</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Max used connections</name>
                    <type>DEPENDENT</type>
                    <key>mysql.max_used_connections</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The maximum number of connections that have been in use simultaneously since the server started.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Max_used_connections</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Status</name>
                    <key>mysql.ping[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>MySQL: Service is down</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Queries per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.queries.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of statements executed by the server. This variable includes statements executed within stored programs, unlike the Questions variable.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Queries</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Questions per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.questions.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of statements executed by the server. This includes only statements sent to the server by clients and not statements executed within stored programs, unlike the Queries variable.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Questions</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Slow queries per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.slow_queries.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of queries that have taken more than long_query_time seconds.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Slow_queries</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$MYSQL.SLOW_QUERIES.MAX.WARN}</expression>
                            <name>MySQL: Server has slow queries (over {$MYSQL.SLOW_QUERIES.MAX.WARN} for 5m)</name>
                            <priority>WARNING</priority>
                            <description>The number of slow queries is more than {$MYSQL.SLOW_QUERIES.MAX.WARN} in the last 5 minutes.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Threads cached</name>
                    <type>DEPENDENT</type>
                    <key>mysql.threads_cached</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of threads in the thread cache.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Threads_cached</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Threads connected</name>
                    <type>DEPENDENT</type>
                    <key>mysql.threads_connected</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of currently open connections.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Threads_connected</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Threads created per second</name>
                    <type>DEPENDENT</type>
                    <key>mysql.threads_created.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of threads created to handle connections. If Threads_created is big, you may want to increase the thread_cache_size value. The cache miss rate can be calculated as Threads_created/Connections.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Threads_created</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Threads running</name>
                    <type>DEPENDENT</type>
                    <key>mysql.threads_running</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The number of threads that are not sleeping.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Threads_running</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>MySQL: Uptime</name>
                    <type>DEPENDENT</type>
                    <key>mysql.uptime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>uptime</units>
                    <description>The number of seconds that the server has been up.</description>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Uptime</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>mysql.get_status_variables[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>MySQL: Failed to fetch info data (or no data for 30m)</name>
                            <priority>INFO</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes.</description>
                            <dependencies>
                                <dependency>
                                    <name>MySQL: Service is down</name>
                                    <expression>{SCS_Template DB MySQL:mysql.ping[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;].last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <expression>{last()}&lt;10m</expression>
                            <name>MySQL: Service has been restarted (uptime &lt; 10m)</name>
                            <priority>INFO</priority>
                            <description>MySQL uptime is less than 10 minutes.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MySQL: Version</name>
                    <key>mysql.version[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    <delay>15m</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>MySQL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>MySQL: Version has changed (new version value received: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>MySQL version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Databases discovery</name>
                    <key>mysql.db.discovery[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    <delay>1h</delay>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#DATABASE}</macro>
                                <value>information_schema</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Scanning databases in DBMS.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>MySQL: Size of database {#DATABASE}</name>
                            <key>mysql.db.size[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;,&quot;{#DATABASE}&quot;]</key>
                            <delay>5m</delay>
                            <history>7d</history>
                            <units>B</units>
                            <applications>
                                <application>
                                    <name>MySQL</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#DATABASE}</lld_macro>
                            <path>$.Database</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>Replication discovery</name>
                    <key>mysql.replication.discovery[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;]</key>
                    <delay>1h</delay>
                    <description>If &quot;show slave status&quot; returns Master_Host, &quot;Replication: *&quot; items are created.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>MySQL: Replication Slave status {#MASTER_HOST}</name>
                            <key>mysql.replication.get_slave_status[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;,&quot;{#MASTER_HOST}&quot;]</key>
                            <history>1h</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>The item gets status information on essential parameters of the slave threads.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>MySQL: Replication Seconds Behind Master {#MASTER_HOST}</name>
                            <type>DEPENDENT</type>
                            <key>mysql.replication.seconds_behind_master[&quot;{#MASTER_HOST}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>s</units>
                            <description>The number of seconds that the slave SQL thread is behind processing the master binary log.&#13;
A high number (or an increasing one) can indicate that the slave is unable to handle events&#13;
from the master in a timely fashion.</description>
                            <applications>
                                <application>
                                    <name>MySQL</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Seconds_Behind_Master</params>
                                </step>
                                <step>
                                    <type>MATCHES_REGEX</type>
                                    <params>\d+</params>
                                    <error_handler>CUSTOM_ERROR</error_handler>
                                    <error_handler_params>Replication is not performed.</error_handler_params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.replication.get_slave_status[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;,&quot;{#MASTER_HOST}&quot;]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$MYSQL.REPL_LAG.MAX.WARN}</expression>
                                    <name>MySQL: Replication lag is too high (over {$MYSQL.REPL_LAG.MAX.WARN} for 5m)</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>MySQL: Replication Slave IO Running {#MASTER_HOST}</name>
                            <type>DEPENDENT</type>
                            <key>mysql.replication.slave_io_running[&quot;{#MASTER_HOST}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Whether the I/O thread for reading the master's binary log is running. &#13;
Normally, you want this to be Yes unless you have not yet started replication or have &#13;
explicitly stopped it with STOP SLAVE.</description>
                            <applications>
                                <application>
                                    <name>MySQL</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Slave_IO_Running</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.replication.get_slave_status[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;,&quot;{#MASTER_HOST}&quot;]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,&quot;Yes&quot;,ne)}=1</expression>
                                    <name>MySQL: The slave I/O thread is not connected to a replication master</name>
                                    <priority>WARNING</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>MySQL: The slave I/O thread is not running</name>
                                            <expression>{SCS_Template DB MySQL:mysql.replication.slave_io_running[&quot;{#MASTER_HOST}&quot;].count(#1,&quot;No&quot;,eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,&quot;No&quot;,eq)}=1</expression>
                                    <name>MySQL: The slave I/O thread is not running</name>
                                    <priority>AVERAGE</priority>
                                    <description>Whether the I/O thread for reading the master's binary log is running.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>MySQL: Replication Slave SQL Running {#MASTER_HOST}</name>
                            <type>DEPENDENT</type>
                            <key>mysql.replication.slave_sql_running[&quot;{#MASTER_HOST}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Whether the SQL thread for executing events in the relay log is running. &#13;
As with the I/O thread, this should normally be Yes.</description>
                            <applications>
                                <application>
                                    <name>MySQL</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Slave_SQL_Running</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>mysql.replication.get_slave_status[&quot;{$MYSQL.DSN}&quot;,&quot;{$MYSQL.USER}&quot;,&quot;{$MYSQL.PASSWORD}&quot;,&quot;{#MASTER_HOST}&quot;]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,&quot;No&quot;,eq)}=1</expression>
                                    <name>MySQL: The SQL thread is not running</name>
                                    <priority>WARNING</priority>
                                    <description>Whether the SQL thread for executing events in the relay log is running.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>MySQL: The slave I/O thread is not running</name>
                                            <expression>{SCS_Template DB MySQL:mysql.replication.slave_io_running[&quot;{#MASTER_HOST}&quot;].count(#1,&quot;No&quot;,eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#MASTER_HOST}</lld_macro>
                            <path>$.Master_Host</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$MYSQL.ABORTED_CONN.MAX.WARN}</macro>
                    <value>3</value>
                    <description>The number of failed attempts to connect to the MySQL server for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.BUFF_UTIL.MIN.WARN}</macro>
                    <value>50</value>
                    <description>The minimum buffer pool utilization percentage for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.CREATED_TMP_DISK_TABLES.MAX.WARN}</macro>
                    <value>10</value>
                    <description>The maximum number of created tmp tables on a disk per second for trigger expressions.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.CREATED_TMP_FILES.MAX.WARN}</macro>
                    <value>10</value>
                    <description>The maximum number of created tmp files on a disk per second for trigger expressions.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.CREATED_TMP_TABLES.MAX.WARN}</macro>
                    <value>30</value>
                    <description>The maximum number of created tmp tables in memory per second for trigger expressions.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.DSN}</macro>
                    <value>tcp://10.70.52.10:3306</value>
                    <description>System data source name such as &lt;protocol(host:port or /path/to/socket)/&gt;.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.PASSWORD}</macro>
                    <value>thou0we.ub4KaeDa</value>
                    <description>MySQL user password.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.REPL_LAG.MAX.WARN}</macro>
                    <value>30m</value>
                    <description>The lag of slave from master for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.SLOW_QUERIES.MAX.WARN}</macro>
                    <value>3</value>
                    <description>The number of slow queries for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$MYSQL.USER}</macro>
                    <value>zbx_monitor</value>
                    <description>MySQL user name.</description>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>MySQL performance</name>
                    <hsize>2</hsize>
                    <vsize>3</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>MySQL: Operations</name>
                                <host>SCS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>MySQL: Queries</name>
                                <host>SCS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>MySQL: Connections</name>
                                <host>SCS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>MySQL: Bandwidth</name>
                                <host>SCS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>MySQL: InnoDB buffer pool</name>
                                <host>SCS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>MySQL: Threads</name>
                                <host>SCS_Template DB MySQL</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
        <template>
            <template>SCS_Template Module ICMP Ping</template>
            <name>SCS_Template Module ICMP Ping</name>
            <description>Template Module ICMP Ping&#13;
&#13;
Template tooling version used: 0.34</description>
            <groups>
                <group>
                    <name>Templates/Modules</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Status</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>ICMP ping</name>
                    <type>SIMPLE</type>
                    <key>icmpping</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Status</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{max(#3)}=0</expression>
                            <name>Unavailable by ICMP ping</name>
                            <priority>HIGH</priority>
                            <description>Last three attempts returned timeout.  Please check device connectivity.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ICMP loss</name>
                    <type>SIMPLE</type>
                    <key>icmppingloss</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Status</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$ICMP_LOSS_WARN} and {min(5m)}&lt;100</expression>
                            <name>High ICMP ping loss</name>
                            <opdata>Loss: {ITEM.LASTVALUE1}</opdata>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Unavailable by ICMP ping</name>
                                    <expression>{SCS_Template Module ICMP Ping:icmpping.max(#3)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ICMP response time</name>
                    <type>SIMPLE</type>
                    <key>icmppingsec</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Status</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{avg(5m)}&gt;{$ICMP_RESPONSE_TIME_WARN}</expression>
                            <name>High ICMP ping response time</name>
                            <opdata>Value: {ITEM.LASTVALUE1}</opdata>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>High ICMP ping loss</name>
                                    <expression>{SCS_Template Module ICMP Ping:icmppingloss.min(5m)}&gt;{$ICMP_LOSS_WARN} and {SCS_Template Module ICMP Ping:icmppingloss.min(5m)}&lt;100</expression>
                                </dependency>
                                <dependency>
                                    <name>Unavailable by ICMP ping</name>
                                    <expression>{SCS_Template Module ICMP Ping:icmpping.max(#3)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <macros>
                <macro>
                    <macro>{$ICMP_LOSS_WARN}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$ICMP_RESPONSE_TIME_WARN}</macro>
                    <value>0.15</value>
                </macro>
            </macros>
        </template>
        <template>
            <template>SCS_Template OS Linux by Zabbix agent</template>
            <name>SCS_Template OS Linux by Zabbix agent</name>
            <description>Official Linux template. Requires agent of Zabbix 3.0.14, 3.4.5 and 4.0.0 or newer.&#13;
&#13;
Known Issues:&#13;
&#13;
  Description: Network discovery. Zabbix agent as of 4.2 doesn't support items such as net.if.status, net.if.speed.&#13;
&#13;
You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387225-discussion-thread-for-official-zabbix-template-for-linux&#13;
&#13;
Template tooling version used: 0.36</description>
            <templates>
                <template>
                    <name>Template Module Linux block devices by Zabbix agent</name>
                </template>
                <template>
                    <name>Template Module Linux CPU by Zabbix agent</name>
                </template>
                <template>
                    <name>Template Module Linux filesystems by Zabbix agent</name>
                </template>
                <template>
                    <name>Template Module Linux generic by Zabbix agent</name>
                </template>
                <template>
                    <name>Template Module Linux memory by Zabbix agent</name>
                </template>
                <template>
                    <name>Template Module Linux network interfaces by Zabbix agent</name>
                </template>
                <template>
                    <name>Template Module Zabbix agent</name>
                </template>
            </templates>
            <groups>
                <group>
                    <name>Templates/Operating systems</name>
                </group>
            </groups>
            <screens>
                <screen>
                    <name>System performance</name>
                    <hsize>2</hsize>
                    <vsize>7</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>System load</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>CPU usage</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Memory usage</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Swap usage</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>{#FSNAME}: Disk space usage</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>{#DEVNAME}: Disk read/write rates</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>3</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>{#DEVNAME}: Disk average waiting time</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>4</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>{#DEVNAME}: Disk utilization and queue</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>5</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Interface {#IFNAME}: Network traffic</name>
                                <host>SCS_Template OS Linux by Zabbix agent</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>6</y>
                            <colspan>2</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
        <template>
            <template>SCS_Template_Ceph_docker</template>
            <name>SCS_Template_Ceph_docker</name>
            <groups>
                <group>
                    <name>storage</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Docker</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Docker: Architecture</name>
                    <type>DEPENDENT</type>
                    <key>docker.architecture</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Architecture</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Cgroup driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.cgroup_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CgroupDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get containers</name>
                    <key>docker.containers</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{regexp(ceph-osd,1m)}=1</expression>
                            <name>Docker: ceph-osd on Ceph Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(cron,1m)}=1</expression>
                            <name>Docker: cron on Ceph Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(fluentd,1m)}=1</expression>
                            <name>Docker: fluentd on Ceph Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(kolla_toolbox,1m)}=1</expression>
                            <name>Docker: kolla_toolbox on Ceph Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Containers paused</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.paused</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers paused on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersPaused</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers running</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.running</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers running on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersRunning</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers stopped</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.stopped</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers stopped on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersStopped</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers total</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers[*].SizeRw.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Period enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_period.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsPeriod</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Quota enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_quota.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsQuota</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Set enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_set.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUSet</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Shares enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_shares.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUShares</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get data_usage</name>
                    <key>docker.data_usage</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Debug enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.debug.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Debug</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Default runtime</name>
                    <type>DEPENDENT</type>
                    <key>docker.default_runtime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DefaultRuntime</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Storage driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Docker storage driver &#13;
 https://docs.docker.com/storage/storagedriver/</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Driver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Goroutines</name>
                    <type>DEPENDENT</type>
                    <key>docker.goroutines</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of goroutines</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NGoroutines</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get images</name>
                    <key>docker.images</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Images available</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.top_level</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of top-level images</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.length()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.images</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images total</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of images with intermediate image layers</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images size</name>
                    <type>DEPENDENT</type>
                    <key>docker.images_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images[*].Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get info</name>
                    <key>docker.info</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: IPv4 Forwarding enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.ipv4_forwarding.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.IPv4Forwarding</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemory</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory TCP enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem_tcp.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemoryTCP</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel version</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Layers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.layers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LayersSize</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Live restore enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.live_restore.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LiveRestoreEnabled</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Logging driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.logging_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LoggingDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory total</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemTotal</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemoryLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Name</name>
                    <type>DEPENDENT</type>
                    <key>docker.name</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Name</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>Docker: Failed to fetch info data (or no data for 30m)</name>
                            <priority>WARNING</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Docker: Service is down</name>
                                    <expression>{SCS_Template_Ceph_docker:docker.ping.last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: NCPU</name>
                    <type>DEPENDENT</type>
                    <key>docker.ncpu</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NCPU</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: NEvents listener</name>
                    <type>DEPENDENT</type>
                    <key>docker.nevents_listener</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NEventsListener</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Nfd</name>
                    <type>DEPENDENT</type>
                    <key>docker.nfd</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of used File Descriptors</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NFd</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OomKill disabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.oomkill.disabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OomKillDisable</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Operating system</name>
                    <type>DEPENDENT</type>
                    <key>docker.operating_system</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OperatingSystem</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OS type</name>
                    <type>DEPENDENT</type>
                    <key>docker.os_type</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OSType</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Pids limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.pids_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.PidsLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Ping</name>
                    <key>docker.ping</key>
                    <history>7h</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Docker: Service is down</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Docker root dir</name>
                    <type>DEPENDENT</type>
                    <key>docker.root_dir</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DockerRootDir</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Server version</name>
                    <type>DEPENDENT</type>
                    <key>docker.server_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ServerVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Docker: Version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>Docker version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Swap limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.swap_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SwapLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Volumes size</name>
                    <type>DEPENDENT</type>
                    <key>docker.volumes_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Volumes[*].UsageData.Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Containers discovery</name>
                    <key>docker.containers.discovery[false]</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for containers metrics&#13;
&#13;
Parameter:&#13;
true  - Returns all containers&#13;
false - Returns only running containers</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Container {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.created[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Created</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Finished at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.finished[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.FinishedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Image</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.image[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Names[0] == &quot;{#NAME}&quot;)].Image.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.containers</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restart count</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.restart_count[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.RestartCount</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Started at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.started[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.StartedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Dead</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.dead[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Dead</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Error</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.error[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Error</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                                    <name>Container {#NAME}: An error has occurred in the container</name>
                                    <priority>WARNING</priority>
                                    <description>Container {#NAME} has an error. Ack to close.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Exit code</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.exitcode[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.ExitCode</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: OOMKilled</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.oomkilled[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.OOMKilled</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Paused</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.paused[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Paused</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Pid</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.pid[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Pid</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restarting</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.restarting[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Restarting</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Running</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.running[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Running</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.status[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Status</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get info</name>
                            <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Return low-level information about a container</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU kernelmode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_kernelmode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods when the container hits its throttling limit</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled time</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_time[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Aggregate time the container was throttled for in nanoseconds</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_time</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttling periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttling_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods with throttling active</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU total usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.total_usage</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU usermode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_usermode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit peak bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_peak_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitpeakbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory maximum usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.max_usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory private working set</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.private_working_set[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.privateworkingset</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Online CPUs</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.online_cpus[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.online_cpus</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get stats</name>
                            <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Get container stats based on resource usage</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks incoming packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks outgoing packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{SCS_Template_Ceph_docker:docker.container_info.state.exitcode[&quot;{#NAME}&quot;].last()}&gt;0 and {SCS_Template_Ceph_docker:docker.container_info.state.running[&quot;{#NAME}&quot;].last()}=0</expression>
                            <name>Container {#NAME}: Container has been stopped with error code</name>
                            <opdata>Exit code: {ITEM.LASTVALUE1}</opdata>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>Container {#NAME}: CPU usage</name>
                            <type>STACKED</type>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network packets</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>6C59DC</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Ceph_docker</host>
                                        <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Images discovery</name>
                    <key>docker.images.discovery</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for images metrics</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Image {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.created[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Created.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Image {#NAME}: Size</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.size[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Size.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable images</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered images</description>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>Docker overview</name>
                    <hsize>2</hsize>
                    <vsize>5</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Containers</name>
                                <host>SCS_Template_Ceph_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Size</name>
                                <host>SCS_Template_Ceph_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Memory total</name>
                                <host>SCS_Template_Ceph_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Goroutines</name>
                                <host>SCS_Template_Ceph_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Images</name>
                                <host>SCS_Template_Ceph_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
        <template>
            <template>SCS_Template_Compute_docker</template>
            <name>SCS_Template_Compute_docker</name>
            <groups>
                <group>
                    <name>compute</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Docker</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Docker: Architecture</name>
                    <type>DEPENDENT</type>
                    <key>docker.architecture</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Architecture</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Cgroup driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.cgroup_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CgroupDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get containers</name>
                    <key>docker.containers</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{regexp(cron,1m)}=1</expression>
                            <name>Docker: cron on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(fluentd,1m)}=1</expression>
                            <name>Docker: fluentd on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(kolla_toolbox,1m)}=1</expression>
                            <name>Docker: kolla_toolbox on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(neutron_openvswitch_agent,1m)}=1</expression>
                            <name>Docker: neutron_openvswitch_agent on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(nova_compute,1m)}=1</expression>
                            <name>Docker: nova_compute on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(nova_libvirt,1m)}=1</expression>
                            <name>Docker: nova_libvirt on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(openvswitch_db,1m)}=1</expression>
                            <name>Docker: openvswitch_db on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(openvswitch_vswitchd,1m)}=1</expression>
                            <name>Docker: openvswitch_vswitchd on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_cadvisor,1m)}=1</expression>
                            <name>Docker: prometheus_cadvisor on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_node_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_node_exporter on Compute Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Containers paused</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.paused</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers paused on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersPaused</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers running</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.running</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers running on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersRunning</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers stopped</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.stopped</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers stopped on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersStopped</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers total</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers[*].SizeRw.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Period enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_period.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsPeriod</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Quota enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_quota.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsQuota</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Set enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_set.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUSet</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Shares enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_shares.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUShares</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get data_usage</name>
                    <key>docker.data_usage</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Debug enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.debug.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Debug</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Default runtime</name>
                    <type>DEPENDENT</type>
                    <key>docker.default_runtime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DefaultRuntime</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Storage driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Docker storage driver &#13;
 https://docs.docker.com/storage/storagedriver/</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Driver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Goroutines</name>
                    <type>DEPENDENT</type>
                    <key>docker.goroutines</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of goroutines</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NGoroutines</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get images</name>
                    <key>docker.images</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Images available</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.top_level</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of top-level images</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.length()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.images</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images total</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of images with intermediate image layers</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images size</name>
                    <type>DEPENDENT</type>
                    <key>docker.images_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images[*].Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get info</name>
                    <key>docker.info</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: IPv4 Forwarding enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.ipv4_forwarding.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.IPv4Forwarding</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemory</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory TCP enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem_tcp.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemoryTCP</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel version</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Layers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.layers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LayersSize</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Live restore enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.live_restore.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LiveRestoreEnabled</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Logging driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.logging_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LoggingDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory total</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemTotal</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemoryLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Name</name>
                    <type>DEPENDENT</type>
                    <key>docker.name</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Name</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>Docker: Failed to fetch info data (or no data for 30m)</name>
                            <priority>WARNING</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Docker: Service is down</name>
                                    <expression>{SCS_Template_Compute_docker:docker.ping.last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: NCPU</name>
                    <type>DEPENDENT</type>
                    <key>docker.ncpu</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NCPU</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: NEvents listener</name>
                    <type>DEPENDENT</type>
                    <key>docker.nevents_listener</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NEventsListener</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Nfd</name>
                    <type>DEPENDENT</type>
                    <key>docker.nfd</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of used File Descriptors</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NFd</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OomKill disabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.oomkill.disabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OomKillDisable</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Operating system</name>
                    <type>DEPENDENT</type>
                    <key>docker.operating_system</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OperatingSystem</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OS type</name>
                    <type>DEPENDENT</type>
                    <key>docker.os_type</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OSType</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Pids limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.pids_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.PidsLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Ping</name>
                    <key>docker.ping</key>
                    <history>7h</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Docker: Service is down</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Docker root dir</name>
                    <type>DEPENDENT</type>
                    <key>docker.root_dir</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DockerRootDir</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Server version</name>
                    <type>DEPENDENT</type>
                    <key>docker.server_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ServerVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Docker: Version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>Docker version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Swap limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.swap_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SwapLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Volumes size</name>
                    <type>DEPENDENT</type>
                    <key>docker.volumes_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Volumes[*].UsageData.Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Containers discovery</name>
                    <key>docker.containers.discovery[false]</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for containers metrics&#13;
&#13;
Parameter:&#13;
true  - Returns all containers&#13;
false - Returns only running containers</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Container {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.created[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Created</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Finished at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.finished[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.FinishedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Image</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.image[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Names[0] == &quot;{#NAME}&quot;)].Image.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.containers</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restart count</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.restart_count[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.RestartCount</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Started at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.started[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.StartedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Dead</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.dead[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Dead</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Error</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.error[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Error</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                                    <name>Container {#NAME}: An error has occurred in the container</name>
                                    <priority>WARNING</priority>
                                    <description>Container {#NAME} has an error. Ack to close.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Exit code</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.exitcode[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.ExitCode</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: OOMKilled</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.oomkilled[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.OOMKilled</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Paused</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.paused[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Paused</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Pid</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.pid[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Pid</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restarting</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.restarting[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Restarting</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Running</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.running[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Running</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.status[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Status</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get info</name>
                            <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Return low-level information about a container</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU kernelmode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_kernelmode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods when the container hits its throttling limit</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled time</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_time[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Aggregate time the container was throttled for in nanoseconds</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_time</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttling periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttling_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods with throttling active</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU total usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.total_usage</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU usermode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_usermode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit peak bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_peak_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitpeakbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory maximum usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.max_usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory private working set</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.private_working_set[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.privateworkingset</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Online CPUs</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.online_cpus[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.online_cpus</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get stats</name>
                            <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Get container stats based on resource usage</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks incoming packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks outgoing packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{SCS_Template_Compute_docker:docker.container_info.state.exitcode[&quot;{#NAME}&quot;].last()}&gt;0 and {SCS_Template_Compute_docker:docker.container_info.state.running[&quot;{#NAME}&quot;].last()}=0</expression>
                            <name>Container {#NAME}: Container has been stopped with error code</name>
                            <opdata>Exit code: {ITEM.LASTVALUE1}</opdata>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>Container {#NAME}: CPU usage</name>
                            <type>STACKED</type>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network packets</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>6C59DC</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Compute_docker</host>
                                        <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Images discovery</name>
                    <key>docker.images.discovery</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for images metrics</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Image {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.created[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Created.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Image {#NAME}: Size</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.size[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Size.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable images</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered images</description>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>Docker overview</name>
                    <hsize>2</hsize>
                    <vsize>5</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Containers</name>
                                <host>SCS_Template_Compute_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Size</name>
                                <host>SCS_Template_Compute_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Memory total</name>
                                <host>SCS_Template_Compute_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Goroutines</name>
                                <host>SCS_Template_Compute_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Images</name>
                                <host>SCS_Template_Compute_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
        <template>
            <template>SCS_Template_Controller_docker</template>
            <name>SCS_Template_Controller_docker</name>
            <groups>
                <group>
                    <name>control</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Docker</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Docker: Architecture</name>
                    <type>DEPENDENT</type>
                    <key>docker.architecture</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Architecture</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Cgroup driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.cgroup_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CgroupDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get containers</name>
                    <key>docker.containers</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{regexp(ceph-mgr-control,1m)}=1</expression>
                            <name>Docker: ceph-mgr-control on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(ceph-mon-control,1m)}=1</expression>
                            <name>Docker: ceph-mon-control on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(cinder_api,1m)}=1</expression>
                            <name>Docker: cinder_api on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(cinder_backup,1m)}=1</expression>
                            <name>Docker: cinder_backup on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(cinder_scheduler,1m)}=1</expression>
                            <name>Docker: cinder_scheduler on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(cinder_volume,1m)}=1</expression>
                            <name>Docker: cinder_volume on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(cron,1m)}=1</expression>
                            <name>Docker: cron on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(elasticsearch,1m)}=1</expression>
                            <name>Docker: elasticsearch on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(fluentd,1m)}=1</expression>
                            <name>Docker: fluentd on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(glance_api,1m)}=1</expression>
                            <name>Docker: glance_api on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(haproxy,1m)}=1</expression>
                            <name>Docker: haproxy on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(heat_api,1m)}=1</expression>
                            <name>Docker: heat_api on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(heat_api_cfn,1m)}=1</expression>
                            <name>Docker: heat_api_cfn on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(heat_engine,1m)}=1</expression>
                            <name>Docker: heat_engine on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(horizon,1m)}=1</expression>
                            <name>Docker: horizon on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(keepalived,1m)}=1</expression>
                            <name>Docker: keepalived on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(keystone,1m)}=1</expression>
                            <name>Docker: keystone on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(keystone_fernet,1m)}=1</expression>
                            <name>Docker: keystone_fernet on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(keystone_ssh,1m)}=1</expression>
                            <name>Docker: keystone_ssh on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(kibana,1m)}=1</expression>
                            <name>Docker: kibana on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(kolla_toolbox,1m)}=1</expression>
                            <name>Docker: kolla_toolbox on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(mariadb,1m)}=1</expression>
                            <name>Docker: mariadb on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(memcached,1m)}=1</expression>
                            <name>Docker: memcached on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(neutron_dhcp_agent,1m)}=1</expression>
                            <name>Docker: neutron_dhcp_agent on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(neutron_l3_agent,1m)}=1</expression>
                            <name>Docker: neutron_l3_agent on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(neutron_metadata_agent,1m)}=1</expression>
                            <name>Docker: neutron_metadata_agent on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(neutron_openvswitch_agent,1m)}=1</expression>
                            <name>Docker: neutron_openvswitch_agent on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(neutron_server,1m)}=1</expression>
                            <name>Docker: neutron_server on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(nova_api,1m)}=1</expression>
                            <name>Docker: nova_api on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(nova_conductor,1m)}=1</expression>
                            <name>Docker: nova_conductor on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(nova_novncproxy,1m)}=1</expression>
                            <name>Docker: nova_novncproxy on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(nova_scheduler,1m)}=1</expression>
                            <name>Docker: nova_scheduler on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(openvswitch_db,1m)}=1</expression>
                            <name>Docker: openvswitch_db on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(openvswitch_vswitchd,1m)}=1</expression>
                            <name>Docker: openvswitch_vswitchd on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(placement_api,1m)}=1</expression>
                            <name>Docker: placement_api on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_cadvisor,1m)}=1</expression>
                            <name>Docker: prometheus_cadvisor on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_elasticsearch_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_elasticsearch_exporter on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_haproxy_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_haproxy_exporter on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_memcached_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_memcached_exporter on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_mysqld_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_mysqld_exporter on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_node_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_node_exporter on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(rabbitmq,1m)}=1</expression>
                            <name>Docker: rabbitmq on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(redis,1m)}=1</expression>
                            <name>Docker: redis on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(redis_sentinel,1m)}=1</expression>
                            <name>Docker: redis_sentinel on Controller Node not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Containers paused</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.paused</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers paused on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersPaused</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers running</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.running</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers running on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersRunning</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers stopped</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.stopped</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers stopped on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersStopped</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers total</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers[*].SizeRw.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Period enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_period.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsPeriod</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Quota enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_quota.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsQuota</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Set enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_set.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUSet</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Shares enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_shares.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUShares</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get data_usage</name>
                    <key>docker.data_usage</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Debug enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.debug.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Debug</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Default runtime</name>
                    <type>DEPENDENT</type>
                    <key>docker.default_runtime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DefaultRuntime</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Storage driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Docker storage driver &#13;
 https://docs.docker.com/storage/storagedriver/</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Driver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Goroutines</name>
                    <type>DEPENDENT</type>
                    <key>docker.goroutines</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of goroutines</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NGoroutines</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get images</name>
                    <key>docker.images</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Images available</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.top_level</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of top-level images</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.length()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.images</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images total</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of images with intermediate image layers</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images size</name>
                    <type>DEPENDENT</type>
                    <key>docker.images_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images[*].Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get info</name>
                    <key>docker.info</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: IPv4 Forwarding enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.ipv4_forwarding.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.IPv4Forwarding</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemory</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory TCP enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem_tcp.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemoryTCP</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel version</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Layers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.layers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LayersSize</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Live restore enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.live_restore.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LiveRestoreEnabled</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Logging driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.logging_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LoggingDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory total</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemTotal</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemoryLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Name</name>
                    <type>DEPENDENT</type>
                    <key>docker.name</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Name</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>Docker: Failed to fetch info data (or no data for 30m)</name>
                            <priority>WARNING</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Docker: Service is down</name>
                                    <expression>{SCS_Template_Controller_docker:docker.ping.last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: NCPU</name>
                    <type>DEPENDENT</type>
                    <key>docker.ncpu</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NCPU</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: NEvents listener</name>
                    <type>DEPENDENT</type>
                    <key>docker.nevents_listener</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NEventsListener</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Nfd</name>
                    <type>DEPENDENT</type>
                    <key>docker.nfd</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of used File Descriptors</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NFd</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OomKill disabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.oomkill.disabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OomKillDisable</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Operating system</name>
                    <type>DEPENDENT</type>
                    <key>docker.operating_system</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OperatingSystem</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OS type</name>
                    <type>DEPENDENT</type>
                    <key>docker.os_type</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OSType</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Pids limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.pids_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.PidsLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Ping</name>
                    <key>docker.ping</key>
                    <history>7h</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Docker: Service is down</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Docker root dir</name>
                    <type>DEPENDENT</type>
                    <key>docker.root_dir</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DockerRootDir</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Server version</name>
                    <type>DEPENDENT</type>
                    <key>docker.server_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ServerVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Docker: Version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>Docker version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Swap limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.swap_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SwapLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Volumes size</name>
                    <type>DEPENDENT</type>
                    <key>docker.volumes_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Volumes[*].UsageData.Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Containers discovery</name>
                    <key>docker.containers.discovery[false]</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for containers metrics&#13;
&#13;
Parameter:&#13;
true  - Returns all containers&#13;
false - Returns only running containers</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Container {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.created[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Created</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Finished at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.finished[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.FinishedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Image</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.image[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Names[0] == &quot;{#NAME}&quot;)].Image.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.containers</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restart count</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.restart_count[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.RestartCount</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Started at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.started[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.StartedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Dead</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.dead[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Dead</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Error</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.error[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Error</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                                    <name>Container {#NAME}: An error has occurred in the container</name>
                                    <priority>WARNING</priority>
                                    <description>Container {#NAME} has an error. Ack to close.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Exit code</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.exitcode[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.ExitCode</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: OOMKilled</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.oomkilled[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.OOMKilled</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Paused</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.paused[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Paused</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Pid</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.pid[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Pid</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restarting</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.restarting[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Restarting</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Running</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.running[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Running</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.status[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Status</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get info</name>
                            <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Return low-level information about a container</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU kernelmode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_kernelmode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods when the container hits its throttling limit</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled time</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_time[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Aggregate time the container was throttled for in nanoseconds</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_time</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttling periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttling_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods with throttling active</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU total usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.total_usage</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU usermode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_usermode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit peak bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_peak_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitpeakbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory maximum usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.max_usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory private working set</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.private_working_set[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.privateworkingset</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Online CPUs</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.online_cpus[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.online_cpus</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get stats</name>
                            <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Get container stats based on resource usage</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks incoming packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks outgoing packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{SCS_Template_Controller_docker:docker.container_info.state.exitcode[&quot;{#NAME}&quot;].last()}&gt;0 and {SCS_Template_Controller_docker:docker.container_info.state.running[&quot;{#NAME}&quot;].last()}=0</expression>
                            <name>Container {#NAME}: Container has been stopped with error code</name>
                            <opdata>Exit code: {ITEM.LASTVALUE1}</opdata>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>Container {#NAME}: CPU usage</name>
                            <type>STACKED</type>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network packets</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>6C59DC</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Controller_docker</host>
                                        <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Images discovery</name>
                    <key>docker.images.discovery</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for images metrics</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Image {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.created[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Created.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Image {#NAME}: Size</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.size[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Size.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable images</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered images</description>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>Docker overview</name>
                    <hsize>2</hsize>
                    <vsize>5</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Containers</name>
                                <host>SCS_Template_Controller_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Size</name>
                                <host>SCS_Template_Controller_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Memory total</name>
                                <host>SCS_Template_Controller_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Goroutines</name>
                                <host>SCS_Template_Controller_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Images</name>
                                <host>SCS_Template_Controller_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
        <template>
            <template>SCS_Template_Manager_docker</template>
            <name>SCS_Template_Manager_docker</name>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Docker</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Docker: Architecture</name>
                    <type>DEPENDENT</type>
                    <key>docker.architecture</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Architecture</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Cgroup driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.cgroup_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CgroupDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get containers</name>
                    <key>docker.containers</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{regexp(cron,1m)}=1</expression>
                            <name>Docker: cron not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(fluentd,1m)}=1</expression>
                            <name>Docker: fluentd not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(grafana,1m)}=1</expression>
                            <name>Docker: grafana not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(kolla_toolbox,1m)}=1</expression>
                            <name>Docker: kolla_toolbox not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_ara-server_1,1m)}=1</expression>
                            <name>Docker: manager_ara-server_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_ceph-ansible_1,1m)}=1</expression>
                            <name>Docker: manager_ceph-ansible_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_kolla-ansible_1,1m)}=1</expression>
                            <name>Docker: manager_kolla-ansible_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_mariadb_1,1m)}=1</expression>
                            <name>Docker: manager_mariadb_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_osism-ansible_1,1m)}=1</expression>
                            <name>Docker: manager_osism-ansible_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_redis_1,1m)}=1</expression>
                            <name>Docker: manager_redis_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_alertmanager,1m)}=1</expression>
                            <name>Docker: prometheus_alertmanager not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_blackbox_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_blackbox_exporter not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_cadvisor,1m)}=1</expression>
                            <name>Docker: prometheus_cadvisor not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_node_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_node_exporter not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_openstack_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_openstack_exporter not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_server,1m)}=1</expression>
                            <name>Docker: prometheus_server not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(zabbix-mariab,1m)}=1</expression>
                            <name>Docker: zabbix-mariab not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(zabbix-server,1m)}=1</expression>
                            <name>Docker: zabbix-server not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(zabbix-web,1m)}=1</expression>
                            <name>Docker: zabbix-web not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Containers paused</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.paused</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers paused on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersPaused</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers running</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.running</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers running on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersRunning</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers stopped</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.stopped</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers stopped on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersStopped</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers total</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers[*].SizeRw.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Period enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_period.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsPeriod</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Quota enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_quota.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsQuota</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Set enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_set.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUSet</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Shares enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_shares.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUShares</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get data_usage</name>
                    <key>docker.data_usage</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Debug enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.debug.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Debug</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Default runtime</name>
                    <type>DEPENDENT</type>
                    <key>docker.default_runtime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DefaultRuntime</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Storage driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Docker storage driver &#13;
 https://docs.docker.com/storage/storagedriver/</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Driver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Goroutines</name>
                    <type>DEPENDENT</type>
                    <key>docker.goroutines</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of goroutines</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NGoroutines</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get images</name>
                    <key>docker.images</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Images available</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.top_level</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of top-level images</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.length()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.images</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images total</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of images with intermediate image layers</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images size</name>
                    <type>DEPENDENT</type>
                    <key>docker.images_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images[*].Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get info</name>
                    <key>docker.info</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: IPv4 Forwarding enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.ipv4_forwarding.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.IPv4Forwarding</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemory</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory TCP enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem_tcp.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemoryTCP</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel version</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Layers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.layers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LayersSize</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Live restore enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.live_restore.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LiveRestoreEnabled</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Logging driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.logging_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LoggingDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory total</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemTotal</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemoryLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Name</name>
                    <type>DEPENDENT</type>
                    <key>docker.name</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Name</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>Docker: Failed to fetch info data (or no data for 30m)</name>
                            <priority>WARNING</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Docker: Service is down</name>
                                    <expression>{SCS_Template_Manager_docker:docker.ping.last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: NCPU</name>
                    <type>DEPENDENT</type>
                    <key>docker.ncpu</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NCPU</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: NEvents listener</name>
                    <type>DEPENDENT</type>
                    <key>docker.nevents_listener</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NEventsListener</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Nfd</name>
                    <type>DEPENDENT</type>
                    <key>docker.nfd</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of used File Descriptors</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NFd</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OomKill disabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.oomkill.disabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OomKillDisable</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Operating system</name>
                    <type>DEPENDENT</type>
                    <key>docker.operating_system</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OperatingSystem</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OS type</name>
                    <type>DEPENDENT</type>
                    <key>docker.os_type</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OSType</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Pids limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.pids_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.PidsLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Ping</name>
                    <key>docker.ping</key>
                    <history>7h</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Docker: Service is down</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Docker root dir</name>
                    <type>DEPENDENT</type>
                    <key>docker.root_dir</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DockerRootDir</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Server version</name>
                    <type>DEPENDENT</type>
                    <key>docker.server_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ServerVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Docker: Version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>Docker version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Swap limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.swap_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SwapLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Volumes size</name>
                    <type>DEPENDENT</type>
                    <key>docker.volumes_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Volumes[*].UsageData.Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Containers discovery</name>
                    <key>docker.containers.discovery[false]</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for containers metrics&#13;
&#13;
Parameter:&#13;
true  - Returns all containers&#13;
false - Returns only running containers</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Container {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.created[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Created</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Finished at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.finished[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.FinishedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Image</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.image[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Names[0] == &quot;{#NAME}&quot;)].Image.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.containers</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restart count</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.restart_count[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.RestartCount</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Started at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.started[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.StartedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Dead</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.dead[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Dead</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Error</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.error[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Error</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                                    <name>Container {#NAME}: An error has occurred in the container</name>
                                    <priority>WARNING</priority>
                                    <description>Container {#NAME} has an error. Ack to close.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Exit code</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.exitcode[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.ExitCode</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: OOMKilled</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.oomkilled[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.OOMKilled</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Paused</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.paused[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Paused</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Pid</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.pid[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Pid</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restarting</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.restarting[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Restarting</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Running</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.running[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Running</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.status[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Status</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get info</name>
                            <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Return low-level information about a container</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU kernelmode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_kernelmode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods when the container hits its throttling limit</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled time</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_time[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Aggregate time the container was throttled for in nanoseconds</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_time</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttling periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttling_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods with throttling active</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU total usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.total_usage</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU usermode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_usermode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit peak bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_peak_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitpeakbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory maximum usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.max_usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory private working set</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.private_working_set[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.privateworkingset</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Online CPUs</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.online_cpus[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.online_cpus</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get stats</name>
                            <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Get container stats based on resource usage</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks incoming packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks outgoing packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{SCS_Template_Manager_docker:docker.container_info.state.exitcode[&quot;{#NAME}&quot;].last()}&gt;0 and {SCS_Template_Manager_docker:docker.container_info.state.running[&quot;{#NAME}&quot;].last()}=0</expression>
                            <name>Container {#NAME}: Container has been stopped with error code</name>
                            <opdata>Exit code: {ITEM.LASTVALUE1}</opdata>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>Container {#NAME}: CPU usage</name>
                            <type>STACKED</type>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network packets</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>6C59DC</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Manager_docker</host>
                                        <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Images discovery</name>
                    <key>docker.images.discovery</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for images metrics</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Image {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.created[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Created.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Image {#NAME}: Size</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.size[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Size.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable images</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered images</description>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>Docker overview</name>
                    <hsize>2</hsize>
                    <vsize>5</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Containers</name>
                                <host>SCS_Template_Manager_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Size</name>
                                <host>SCS_Template_Manager_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Memory total</name>
                                <host>SCS_Template_Manager_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Goroutines</name>
                                <host>SCS_Template_Manager_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Images</name>
                                <host>SCS_Template_Manager_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
        <template>
            <template>SCS_Template_Network_docker</template>
            <name>SCS_Template_Network_docker</name>
            <groups>
                <group>
                    <name>network</name>
                </group>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Docker</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Docker: Architecture</name>
                    <type>DEPENDENT</type>
                    <key>docker.architecture</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Architecture</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Cgroup driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.cgroup_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CgroupDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get containers</name>
                    <key>docker.containers</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{regexp(cron,1m)}=1</expression>
                            <name>Docker: cron not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(fluentd,1m)}=1</expression>
                            <name>Docker: fluentd not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(grafana,1m)}=1</expression>
                            <name>Docker: grafana not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(kolla_toolbox,1m)}=1</expression>
                            <name>Docker: kolla_toolbox not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_ara-server_1,1m)}=1</expression>
                            <name>Docker: manager_ara-server_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_ceph-ansible_1,1m)}=1</expression>
                            <name>Docker: manager_ceph-ansible_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_kolla-ansible_1,1m)}=1</expression>
                            <name>Docker: manager_kolla-ansible_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_mariadb_1,1m)}=1</expression>
                            <name>Docker: manager_mariadb_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_osism-ansible_1,1m)}=1</expression>
                            <name>Docker: manager_osism-ansible_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(manager_redis_1,1m)}=1</expression>
                            <name>Docker: manager_redis_1 not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_alertmanager,1m)}=1</expression>
                            <name>Docker: prometheus_alertmanager not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_blackbox_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_blackbox_exporter not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_cadvisor,1m)}=1</expression>
                            <name>Docker: prometheus_cadvisor not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_node_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_node_exporter not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_openstack_exporter,1m)}=1</expression>
                            <name>Docker: prometheus_openstack_exporter not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(prometheus_server,1m)}=1</expression>
                            <name>Docker: prometheus_server not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(zabbix-mariab,1m)}=1</expression>
                            <name>Docker: zabbix-mariab not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(zabbix-server,1m)}=1</expression>
                            <name>Docker: zabbix-server not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{regexp(zabbix-web,1m)}=1</expression>
                            <name>Docker: zabbix-web not availiable (or no data for 1m)</name>
                            <priority>HIGH</priority>
                            <description>Zabbix has not received data for this container for 1 minute</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Containers paused</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.paused</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers paused on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersPaused</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers running</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.running</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers running on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersRunning</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers stopped</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.stopped</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers stopped on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ContainersStopped</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers total</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of containers on this host</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Containers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.containers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Containers[*].SizeRw.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Period enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_period.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsPeriod</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU CFS Quota enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_cfs_quota.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CpuCfsQuota</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Set enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_set.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUSet</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: CPU Shares enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.cpu_shares.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.CPUShares</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get data_usage</name>
                    <key>docker.data_usage</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Debug enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.debug.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Debug</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Default runtime</name>
                    <type>DEPENDENT</type>
                    <key>docker.default_runtime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DefaultRuntime</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Storage driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Docker storage driver &#13;
 https://docs.docker.com/storage/storagedriver/</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Driver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Goroutines</name>
                    <type>DEPENDENT</type>
                    <key>docker.goroutines</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of goroutines</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NGoroutines</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get images</name>
                    <key>docker.images</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: Images available</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.top_level</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of top-level images</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.length()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.images</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images total</name>
                    <type>DEPENDENT</type>
                    <key>docker.images.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of images with intermediate image layers</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Images size</name>
                    <type>DEPENDENT</type>
                    <key>docker.images_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Images[*].Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Get info</name>
                    <key>docker.info</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker: IPv4 Forwarding enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.ipv4_forwarding.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.IPv4Forwarding</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemory</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel memory TCP enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_mem_tcp.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelMemoryTCP</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Kernel version</name>
                    <type>DEPENDENT</type>
                    <key>docker.kernel_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.KernelVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Layers size</name>
                    <type>DEPENDENT</type>
                    <key>docker.layers_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LayersSize</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Live restore enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.live_restore.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LiveRestoreEnabled</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Logging driver</name>
                    <type>DEPENDENT</type>
                    <key>docker.logging_driver</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.LoggingDriver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory total</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemTotal</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Memory limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.mem_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.MemoryLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Name</name>
                    <type>DEPENDENT</type>
                    <key>docker.name</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Name</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>Docker: Failed to fetch info data (or no data for 30m)</name>
                            <priority>WARNING</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Docker: Service is down</name>
                                    <expression>{SCS_Template_Network_docker:docker.ping.last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: NCPU</name>
                    <type>DEPENDENT</type>
                    <key>docker.ncpu</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NCPU</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: NEvents listener</name>
                    <type>DEPENDENT</type>
                    <key>docker.nevents_listener</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NEventsListener</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Nfd</name>
                    <type>DEPENDENT</type>
                    <key>docker.nfd</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Number of used File Descriptors</description>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.NFd</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OomKill disabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.oomkill.disabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OomKillDisable</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Operating system</name>
                    <type>DEPENDENT</type>
                    <key>docker.operating_system</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OperatingSystem</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: OS type</name>
                    <type>DEPENDENT</type>
                    <key>docker.os_type</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.OSType</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Pids limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.pids_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.PidsLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Ping</name>
                    <key>docker.ping</key>
                    <history>7h</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Docker: Service is down</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Docker root dir</name>
                    <type>DEPENDENT</type>
                    <key>docker.root_dir</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.DockerRootDir</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Server version</name>
                    <type>DEPENDENT</type>
                    <key>docker.server_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.ServerVersion</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Docker: Version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>Docker version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker: Swap limit enabled</name>
                    <type>DEPENDENT</type>
                    <key>docker.swap_limit.enabled</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Docker flag</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.SwapLimit</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.info</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker: Volumes size</name>
                    <type>DEPENDENT</type>
                    <key>docker.volumes_size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.Volumes[*].UsageData.Size.sum()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.data_usage</key>
                    </master_item>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Containers discovery</name>
                    <key>docker.containers.discovery[false]</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for containers metrics&#13;
&#13;
Parameter:&#13;
true  - Returns all containers&#13;
false - Returns only running containers</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Container {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.created[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Created</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Finished at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.finished[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.FinishedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Image</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.image[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Names[0] == &quot;{#NAME}&quot;)].Image.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.containers</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restart count</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.restart_count[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.RestartCount</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Started at</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.started[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.StartedAt</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Dead</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.dead[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Dead</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Error</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.error[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Error</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                                    <name>Container {#NAME}: An error has occurred in the container</name>
                                    <priority>WARNING</priority>
                                    <description>Container {#NAME} has an error. Ack to close.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Exit code</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.exitcode[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.ExitCode</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: OOMKilled</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.oomkilled[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.OOMKilled</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Paused</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.paused[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Paused</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Pid</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.pid[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Pid</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Restarting</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.restarting[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Restarting</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Running</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.running[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Docker flag</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Running</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_info.state.status[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.State.Status</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get info</name>
                            <key>docker.container_info[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Return low-level information about a container</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU kernelmode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_kernelmode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods when the container hits its throttling limit</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttled time</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttled_time[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Aggregate time the container was throttled for in nanoseconds</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.throttled_time</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Throttling periods</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.throttling_periods[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of periods with throttling active</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.throttling_data.periods</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU total usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.total_usage</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: CPU usermode usage per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.cpu_usage.usage_in_usermode</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1.0E-9</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory commit peak bytes</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.commit_peak_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.commitpeakbytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory maximum usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.max_usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory private working set</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.private_working_set[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.privateworkingset</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.memory_stats.usage</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Online CPUs</name>
                            <type>DEPENDENT</type>
                            <key>docker.container_stats.online_cpus[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.cpu_stats.online_cpus</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Get stats</name>
                            <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Get container stats based on resource usage</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks incoming packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets received per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].rx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks bytes sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_bytes.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks outgoing packets dropped per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_dropped.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks errors sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_errors.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Container {#NAME}: Networks packets sent per second</name>
                            <type>DEPENDENT</type>
                            <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Container {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.networks[*].tx_packets.sum()</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.container_stats[&quot;{#NAME}&quot;]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{SCS_Template_Network_docker:docker.container_info.state.exitcode[&quot;{#NAME}&quot;].last()}&gt;0 and {SCS_Template_Network_docker:docker.container_info.state.running[&quot;{#NAME}&quot;].last()}=0</expression>
                            <name>Container {#NAME}: Container has been stopped with error code</name>
                            <opdata>Exit code: {ITEM.LASTVALUE1}</opdata>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>Container {#NAME}: CPU usage</name>
                            <type>STACKED</type>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.container_stats.cpu_usage.kernel.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.container_stats.cpu_usage.user.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.container_stats.cpu_usage.total.rate[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Memory usage</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.container_stats.memory.usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.container_stats.memory.max_usage[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network packets</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.networks.rx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.networks.tx_packets[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.networks.rx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.networks.tx_errors[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.networks.rx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>6C59DC</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.networks.tx_dropped[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Container {#NAME}: Network traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.networks.rx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SCS_Template_Network_docker</host>
                                        <key>docker.networks.tx_bytes[&quot;{#NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Images discovery</name>
                    <key>docker.images.discovery</key>
                    <delay>15m</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery for images metrics</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Image {#NAME}: Created</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.created[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Created.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Image {#NAME}: Size</name>
                            <type>DEPENDENT</type>
                            <key>docker.image.size[&quot;{#ID}&quot;]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Docker: Image {#NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Id == &quot;{#ID}&quot;)].Size.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.images</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered containers</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable images</description>
                </macro>
                <macro>
                    <macro>{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered images</description>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>Docker overview</name>
                    <hsize>2</hsize>
                    <vsize>5</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Containers</name>
                                <host>SCS_Template_Network_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Size</name>
                                <host>SCS_Template_Network_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Memory total</name>
                                <host>SCS_Template_Network_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Goroutines</name>
                                <host>SCS_Template_Network_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Docker: Images</name>
                                <host>SCS_Template_Network_docker</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>({SCS_Template App Elasticsearch Cluster by HTTP:es.nodes.fs.total_in_bytes.last()}-{SCS_Template App Elasticsearch Cluster by HTTP:es.nodes.fs.available_in_bytes.last()})/({SCS_Template App Elasticsearch Cluster by HTTP:es.cluster.number_of_data_nodes.last()}-1)&gt;{SCS_Template App Elasticsearch Cluster by HTTP:es.nodes.fs.available_in_bytes.last()}</expression>
            <name>ES: Cluster does not have enough space for resharding</name>
            <priority>HIGH</priority>
            <description>There is not enough disk space for index resharding.</description>
        </trigger>
        <trigger>
            <expression>{SCS_Template App Memcached:memcached.stats.bytes.min(5m)}/{SCS_Template App Memcached:memcached.config.limit_maxbytes.last()}*100&gt;{$MEMCACHED.MEM.PUSED.MAX.WARN}</expression>
            <name>Memcached: Memory usage is too high (over {$MEMCACHED.MEM.PUSED.MAX.WARN} in 5m)</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{SCS_Template App Memcached:memcached.connections.current.min(5m)}/{SCS_Template App Memcached:memcached.connections.max.last()}*100&gt;{$MEMCACHED.CONN.PRC.MAX.WARN}</expression>
            <name>Memcached: Total number of connected clients is too high (over {$MEMCACHED.CONN.PRC.MAX.WARN}% in 5m)</name>
            <priority>WARNING</priority>
            <description>When the number of connections reaches the value of the &quot;max_connections&quot; parameter, new connections will be rejected.</description>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>Docker: Containers</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.containers.running</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.containers.paused</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.containers.stopped</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.containers.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Containers</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.containers.running</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.containers.paused</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.containers.stopped</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.containers.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Containers</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.containers.running</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.containers.paused</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.containers.stopped</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.containers.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Containers</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.containers.running</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.containers.paused</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.containers.stopped</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.containers.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Containers</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.containers.running</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.containers.paused</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.containers.stopped</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.containers.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Goroutines</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.goroutines</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Goroutines</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.goroutines</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Goroutines</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.goroutines</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Goroutines</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.goroutines</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Goroutines</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.goroutines</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Images</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.images.top_level</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.images.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Images</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.images.top_level</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.images.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Images</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.images.top_level</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.images.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Images</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.images.top_level</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.images.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Images</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.images.top_level</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.images.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Memory total</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.mem.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Memory total</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.mem.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Memory total</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.mem.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Memory total</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.mem.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Memory total</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.mem.total</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Size</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.images_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.layers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.containers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Controller_docker</host>
                        <key>docker.volumes_size</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Size</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.images_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.layers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.containers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Manager_docker</host>
                        <key>docker.volumes_size</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Size</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.images_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.layers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.containers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Compute_docker</host>
                        <key>docker.volumes_size</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Size</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.images_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.layers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.containers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Network_docker</host>
                        <key>docker.volumes_size</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker: Size</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.images_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.layers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.containers_size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template_Ceph_docker</host>
                        <key>docker.volumes_size</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>ES: Cluster health</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                        <key>es.cluster.inactive_shards_percent_as_number</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                        <key>es.cluster.relocating_shards</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                        <key>es.cluster.initializing_shards</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                        <key>es.cluster.unassigned_shards</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                        <key>es.cluster.delayed_unassigned_shards</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>6C59DC</color>
                    <item>
                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                        <key>es.cluster.number_of_pending_tasks</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>AC8C14</color>
                    <item>
                        <host>SCS_Template App Elasticsearch Cluster by HTTP</host>
                        <key>es.cluster.task_max_waiting_in_queue</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memcached: Commands</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.commands.flush.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.commands.set.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.commands.get.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memcached: Connections</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.connections.max</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.connections.current</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.connections.structures</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memcached: Connections rate</name>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.connections.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.connections.throttled.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.connections.queued.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memcached: Keyspace</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.stats.hits.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.stats.misses.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memcached: Network</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.stats.bytes_read.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.stats.bytes_written.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memcached: Uptime</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template App Memcached</host>
                        <key>memcached.uptime</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>MySQL: Bandwidth</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.bytes_received.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.bytes_sent.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>MySQL: Connections</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.aborted_clients.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.aborted_connects.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.connections.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.max_used_connections</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>MySQL: InnoDB buffer pool</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.innodb_buffer_pool_pages_free</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.innodb_buffer_pool_pages_total</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.innodb_buffer_pool_read_requests.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.innodb_buffer_pool_reads.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>MySQL: Operations</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.com_delete.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.com_insert.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.com_select.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.com_update.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>MySQL: Queries</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.queries.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.questions.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.slow_queries.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>MySQL: Threads</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.threads_cached</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.threads_connected</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.threads_created.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>SCS_Template DB MySQL</host>
                        <key>mysql.threads_running</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>OSD breakdown by state</name>
            <graph_items>
                <graph_item>
                    <color>00C800</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>osd_count_down</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>C80000</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>osd_count_in</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>osd_count_out</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>C800C8</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>osd_count_up</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>PG breakdown by state</name>
            <graph_items>
                <graph_item>
                    <color>00C800</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_count</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>C80000</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_active</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_backfill</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>C800C8</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_backfilltoofull</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>00C8C8</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_clean</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>C8C800</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_creating</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>C8C8C8</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_degraded</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_down</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <color>960000</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_incomplete</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>9</sortorder>
                    <color>000096</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_inconsistent</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>10</sortorder>
                    <color>960096</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_peered</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>11</sortorder>
                    <color>009696</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_peering</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>12</sortorder>
                    <color>969600</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_recovering</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>13</sortorder>
                    <color>969696</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_remapped</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>14</sortorder>
                    <color>00FF00</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_repair</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>15</sortorder>
                    <color>FF0000</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_replay</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>16</sortorder>
                    <color>0000FF</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_scrubbing</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>17</sortorder>
                    <color>FF00FF</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_splitting</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>18</sortorder>
                    <color>00FFFF</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_stale</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>19</sortorder>
                    <color>FFFF00</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_undersized</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>20</sortorder>
                    <color>FFFFFF</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pg_state_count_waitbackfill</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>PG number vs Object number</name>
            <graph_items>
                <graph_item>
                    <color>00C800</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>objects_count</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>C80000</color>
                    <yaxisside>RIGHT</yaxisside>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pool_count</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Storage capacity</name>
            <graph_items>
                <graph_item>
                    <color>00C800</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pool_total_bytes_free</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>C80000</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pool_total_bytes_total</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>SCS_Template App OpenStack Ceph Cluster</host>
                        <key>pool_total_bytes_used</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Value cache effectiveness</name>
            <type>STACKED</type>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[vcache,cache,misses]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[vcache,cache,hits]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Zabbix cache usage, % used</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <color>009900</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[wcache,trend,pused]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>DD0000</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[rcache,buffer,pused]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00DDDD</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[wcache,index,pused]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>3333FF</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[wcache,history,pused]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>999900</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[vcache,buffer,pused]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>00FF00</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[vmware,buffer,pused]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Zabbix data gathering process busy %</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <color>990099</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,trapper,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>990000</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,poller,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000EE</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,ipmi poller,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>FF33FF</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,discoverer,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,icmp pinger,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>003300</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,http poller,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>CCCC00</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,proxy poller,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <color>33FFFF</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,unreachable poller,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <color>DD0000</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,java poller,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>9</sortorder>
                    <color>000099</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,snmp trapper,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>10</sortorder>
                    <color>00FF00</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,vmware collector,avg,busy]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Zabbix internal process busy %</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <color>00EE00</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,timer,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>0000EE</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,escalator,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>FFAA00</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,housekeeper,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>00EEEE</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,alerter,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>990099</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,configuration syncer,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>EE0000</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,history syncer,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>FF66FF</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,self-monitoring,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <color>009999</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,task manager,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <color>BBBB00</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,ipmi manager,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>9</sortorder>
                    <color>AA0000</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,alert manager,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>10</sortorder>
                    <color>990000</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,preprocessing manager,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>11</sortorder>
                    <color>008800</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,preprocessing worker,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>12</sortorder>
                    <color>80B0E0</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,lld manager,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>13</sortorder>
                    <color>4080B0</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,lld worker,avg,busy]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>14</sortorder>
                    <color>8000FF</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[process,alert syncer,avg,busy]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Zabbix internal queues</name>
            <graph_items>
                <graph_item>
                    <color>008800</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[preprocessing_queue]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>EE0000</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[lld_queue]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Zabbix server performance</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>00C800</color>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[wcache,values]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>C80000</color>
                    <yaxisside>RIGHT</yaxisside>
                    <item>
                        <host>SCS_Template App Zabbix Server</host>
                        <key>zabbix[queue]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>Docker flag</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>False</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>True</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>ES cluster state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>green</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>yellow</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>red</newvalue>
                </mapping>
                <mapping>
                    <value>255</value>
                    <newvalue>unknown</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Value cache operating mode</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Normal</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Low memory</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>

